#!/usr/bin/env bash
#------------------------{ Dev info }-----------------------------------------------------------------------------------
# Created by: Ivan Marov <ie.marov@gmail.com>
# Source: https://github.com/vaniacer/piu-piu-SH
# check bash version
case ${BASH_VERSINFO[@]::2} in [1-3]' '[0-9][0-9]|[1-3]' '[0-9]|'4 '[0-1])
    echo -e "\nYour BASH is too short!) 4.2+ required to run this game, your is - ${BASH_VERSINFO[@]}"
    exit 1;;
esac      #                                                                  ░ ░ ░░░ ░ ░░ ░░░▒ ▒▒▒░░░ ░░ ░░ ░ ░
LLLLLLLLLL=$(cat mod|head -n1)
AAAAAAAAAA=$(cat mod|head -n2|tail -n1)
#--------------------------------------------------------------------+ ░   ░░░░ ░░░░▒▒▒▒ ▒▒▒▓ ▓▓▓▒▒▒▒▒▒▒░░░░ ░░░░ ░ ░ ░
# Color picker, usage: printf $BLD$CUR$RED$BBLU'Hello World!'$DEF    |   ░
#-------------------------+--------------------------------+---------+        ░   ░░░ ░░     ░  ░░      ░░  ░░ ░
#       Text color        |       Background color         |         |      ░   ░  ▒██████ ░▒██████ ▒██░  ▒██       ░
#-----------+-------------+--------------+-----------------+         |░       ░ ░░▒▓██ ▒▓██ ▓▓▓██▓ ▒▓██ ░▒▓██░░ ░
# Base color|Lighter shade| Base color   | Lighter shade   |         |     ░ ░ ░░▒▓██ ▒▓██ ▒▒▒▓██ ░▒▓██░ ▒▓██░
#-----------+-------------+--------------+-----------------+         |  ░ ░      ▒▓██████░ ░▒▓██ ░▒▓██ ░▒▓██░░ ░ ░
BLK='\e[30m'; blk='\e[90m'; BBLK='\e[40m'; bblk='\e[100m' #| Black   |       ░  ▒▓██▓▓▓▓  ░ ▒▓██░ ▒▓██░░▒▓██ ░     ░ ░
RED='\e[31m'; red='\e[91m'; BRED='\e[41m'; bred='\e[101m' #| Red     |        ▒▓████▒▒▒░ ░ ▓██████ ▒▓██████░░ ░
GRN='\e[32m'; grn='\e[92m'; BGRN='\e[42m'; bgrn='\e[102m' #| Green   |     ░ ░▒▓▓▓▓ ░ ░░▒▓▓▓▓▓▓ ░ ▒▓▓▓▓▓░
YLW='\e[33m'; ylw='\e[93m'; BYLW='\e[43m'; bylw='\e[103m' #| Yellow  |      ░ ▒▒ ░ ░ ░ ░▒▒▒▒▒▒ ░ ░░▒▒▒▒░  ░
BLU='\e[34m'; blu='\e[94m'; BBLU='\e[44m'; bblu='\e[104m' #| Blue    |  ░ ░                                      ░     ░
MGN='\e[35m'; mgn='\e[95m'; BMGN='\e[45m'; bmgn='\e[105m' #| Magenta |░                      ░░ ▒▒███░              ░
CYN='\e[36m'; cyn='\e[96m'; BCYN='\e[46m'; bcyn='\e[106m' #| Cyan    |     ░ ░ ░        ░░░ ▒████ ▒▓███░             ░
WHT='\e[37m'; wht='\e[97m'; BWHT='\e[47m'; bwht='\e[107m' #| White   |  ░ ░ ░        ░ ▒████▒▓▓▓▓ ░░▒▓▓███ ░░ ░
#-------------------------{ Effects }----------------------+---------+             ░ ▒▓▓▓▓ ▒████░▒▓███░░
DEF='\e[0m'   #Default color and effects                             |              ▒ ▒▒  ▒▓▓▓▓▒▓███░              ░
BLD='\e[1m'   #Bold\brighter                                         |     ░ ░         ░░░ ▒▒▒ ░░▒▒░
DIM='\e[2m'   #Dim\darker                                            |░ ░
CUR='\e[3m'   #Italic font                                           |          ░   ░░░ ░░     ░  ░░      ░░  ░░ ░
UND='\e[4m'   #Underline                                             |        ░   ░  ▒██████ ░▒██████ ▒██░  ▒██        ░
INV='\e[7m'   #Inverted                                              |   ░ ░    ░ ░░▒▓██ ▒▓██ ▓▓▓██▓ ▒▓██ ░▒▓██░░ ░
COF='\e[?25l' #Cursor Off                                            |       ░ ░ ░░▒▓██ ▒▓██ ▒▒▒▓██ ░▒▓██░ ▒▓██░    ░
CON='\e[?25h' #Cursor On                                             |             ▒▓██████░ ░▒▓██ ░▒▓██ ░▒▓██░░ ░ ░
#------------------------{ Functions }-------------------------------+░        ░  ▒▓██▓▓▓▓  ░ ▒▓██░ ▒▓██░░▒▓██ ░
# Text positioning, usage: XY 10 10 'Hello World!'                   |          ▒▓████▒▒▒░ ░ ▓██████ ▒▓██████░░ ░
XY () { printf "\e[$2;${1}H$3"; }                                   #|       ░ ░▒▓▓▓▓ ░ ░░▒▓▓▓▓▓▓ ░ ▒▓▓▓▓▓░
# Print line, usage: line - 10 | line -= 20 | line 'Hello World!' 20 |  ░     ░ ▒▒ ░ ░ ░ ░▒▒▒▒▒▒ ░ ░░▒▒▒▒░  ░       ░
line () { printf -v _L %$2s; printf -- "${_L// /$1}"; }             #|
# Create sequence like {0..(X-1)}                                    | ░ ░ ░ ░░░░░░▒▒▒▒ ▒▒▒▓ ▓▓▓▒▒▒▒▒░░░░░░ ░ ░ ░ ░ ░
que () { printf -v _N %$1s; _N=(${_N// / 1}); printf "${!_N[*]}"; } #|    ░ ░ ░░░ ░ ░░ ░░░▒ ▒▒▒░░░░░░░ ░ ░
#----{ Start opt }------------------------------------{ description  }---------------------{ def. values }--------------
  background=true                                     # background objects visibility             (true)
    bossborn=                                         # boss starter
    tillboss=100                                      # frags needed to fight with boss           (100)
     version=₁․₁                                      # game varsion in small digits ₀₁₂₃₄₅₆₇₈₉․
     bhealth=100                                      # boss' health                              (100)
     showfps=true                                     # show FPS counter if set                   (true)
     enumber=0                                        # enemies counter                           (0)
     bonuses=("ammo" "life" "ammo" "gunup" "ammo")    # bonuses, more ammo, less life ang gunup
       enmax=100                                      # max number of enemies                     (10)
       month=$(date +'%m')                            # get current month
       crate=0                                        # crate drop                                (0)
       frags=0                                        # hero1 frags counter                       (0)
        life=$LLLLLLLLLL                                        # hero1 life counter                        (3)
        ammo=$AAAAAAAAAA                                      # hero1 ammo counter                        (100)
         day=$(date +'%d')                            # get current  day
         DHC=$BLK                                     # default hero color                        ($BLK)
         DSC=$RED                                     # default symbol color                      ($RED)
         rnd=10                                       # random seed 4 bonuses                     (10)
         DHS=★                                        # default symbol                            (★)
         spd=0.0001                                   # game\read speed                           (0.0001)
         MSN=1111                                     # messanger randomizer                      (1111)
         HOU=1111                                     # houses randomizer                         (1111)
          ad='Die alien scum!'                        # ad plane message                          'Die alien scum!'
           G=1                                        # gun                                       (1)(max 5)
#----{ Multipleyer config }---------------------------{ description  }---------------------{ def. values }--------------
      frags2=0                                        # hero2 frags counter                       (0)
       life2=3                                        # hero2 life counter                        (3)
       ammo2=100                                      # hero2 ammo counter                        (100)
          G2=1                                        # hero2 gun                                 (1)(max 5)
       caddr=( $(ip a | grep 'inet ' | sed '/127.0.0.1/d; s/.*inet //g; s|/.*$||g') )
       saddr=
       sport=54321
       cport=54322

[[ -e ~/.piuconf ]] && . ~/.piuconf
#================================================{ Messages }===========================================================
case "$day$month$virus" in
    *covid-19) ad='Stay at home!';;&
        1101*) ad='Happy birthday Yura $)';;
        0202*) ad='It is groundhog day !)';;
        2002*) ad='Happy birthday Romka !)';;
        2802*) ad='Happy birthday Matvey !)';;
        3006*) ad='Happy birthday Natusya !)';;
        0803*) ad='Hold on guyz $)';;
        0905*) ad='День победы!';;
esac
#------------------------{ Ad plane text }------------------------------------------------------------------------------
ad_plane_text () {
    case $type in duel) ad='Try to catch this!' ad_new=;; esac
    CM4= CM5=; case "$day$month" in 0905) CM4=$bylw CM5=$bblk;; esac
    for ((i=0; i<${#ad}; i++)); do ad_new+="$CM5$BLD$red${ad:$i:1} "; done
    new_ad=( ${ad_new//  /⎕ } ) line=( ${new_ad[@]//*/$CM4$blk-} ) width=$((19+${#new_ad[@]}))
};  ad_plane_text

#↑ ↓ ← → ▲ ▼ ▶ ◀ ▷ ◁ △ ▽
sprite_help () {
    x=$[$endx/2-25/2]
    y=$[$endy/2-5]
    XY $[x+19]  $y                                       '▲'
    XY $[x+19] $[y+1]                              "${RED}W$DEF"
    XY  $x     $[y+2] "${BLD}Control with:$DEF  ◀ ${RED}A S D$DEF ▶"
    XY $[x+19] $[y+3]                                    '▼'
    XY  $x     $[y+5] "${BLD}Shoot\select with:$DEF ${YLW}P $BLD$red-=$GRN>$DEF"
}

sprite_lose () {
    x=$[$endx/2-25/2] CM1=$BLD$red
    y=$[$endy/2-5]    CM2=$DIM$RED
    XY $x  $y    "$CM1  ____    _    __  __ _____ $DEF"
    XY $x $[y+1] "$red / ___|  / \  |  \/  | ____|$DEF"
    XY $x $[y+2] "$red| | __  / _ \ | |\/| |  _|  $DEF"
    XY $x $[y+3] "$RED| |_\ \/ ___ \| |  | | |___ $DEF"
    XY $x $[y+4] "$CM2 \____/_/   \_\_|__|_|_____|$DEF"
    XY $x $[y+5] "$CM1  / _ \ \   / / ____|  _ \  $DEF"
    XY $x $[y+6] "$red | | | \ \ / /|  _| | |_) | $DEF"
    XY $x $[y+7] "$RED | |_| |\ V / | |___|  _ <  $DEF"
    XY $x $[y+8] "$CM2  \___/  \_/  |_____|_| \_| $DEF"
}

sprite_win () {
    x=$[$endx/2-25/2] CM1=$BLD$grn
    y=$[$endy/2-5]    CM2=$DIM$GRN
    XY $x  $y  "${CM1}__        ______ _    _    $DEF"
    XY $x $[y+1] "$grn\ \      / /____| |  | |   $DEF"
    XY $x $[y+2] "$grn \ \ /\ / /  _| | |  | |   $DEF"
    XY $x $[y+3] "$GRN  \ V  V /| |___| |__| |__ $DEF"
    XY $x $[y+4] "$CM2 __\_/\_/_|_____|____|____|$DEF"
    XY $x $[y+5] "$CM1|  _ \ / _ \| \ | | ____| |$DEF"
    XY $x $[y+6] "$grn| | | | | | |  \| |  _| | |$DEF"
    XY $x $[y+7] "$GRN| |_| | |_| | |\  | |___|_|$DEF"
    XY $x $[y+8] "$CM2|____/ \___/|_| \_|_____(_)$DEF"
}
#================================================{ Sprites }============================================================
case $month in
    0[1-4]|12) # winter & early spring
        SKY=$DEF$bwht         # sky color
        LND=$DEF$BLD$WHT$BWHT #land color
        BRD=200               # birds rnd
        CLD=30                # clouds rnd
        TRE=50;;              # trees rnd

    0[5-8]   ) # late spring & summer
        SKY=$DEF$bcyn         # sky color
        LND=$DEF$DIM$GRN$bgrn # land color
        BRD=150               # birds rnd
        CLD=50                # clouds rnd
        TRE=40;;              # trees rnd

    09|1[0-1]) # autumn
        SKY=$DEF$BCYN         # sky color
        LND=$DEF$DIM$YLW$BGRN # land color
        BRD=100               # birds rnd
        CLD=20                # clouds rnd
        TRE=50;;              # trees rnd
esac
case $game in server) BRD=400 CLD=100 TRE=100;; esac
        
                              # ⎕ - space
  gun=(─ ─ ═ ≡ ≣ 𝄚)
grass=(│ ' ' ║ ' ' ░ ' ' ▒ ' ' ▓ ' ' █) # grass types
#------------------------{ Hero1 }--------------------------------------------------------------------------------------
#                                                   center.point   
mainrotor=("${blk}_ ${blk}_ ${blk}_ ${blk}_ ${blk}_       ⎕ ${blk}_ ${blk}_ ${blk}_ ${blk}_ ${blk}_"  # '_____ _____'
           "      ⎕       ⎕       ⎕ ${blk}_ ${blk}_ ${blk}_ ${blk}_ ${blk}_       ⎕       ⎕       ⎕"  # '   _____   '
           "      ⎕       ⎕       ⎕       ⎕ ${blk}_       ⎕ ${blk}_       ⎕       ⎕       ⎕       ⎕"  # '    _ _    '
           "      ⎕       ⎕       ⎕ ${blk}_ ${blk}_ ${blk}_ ${blk}_ ${blk}_       ⎕       ⎕       ⎕") # '   _____   '
tailrotor=("$blk|" "$blk/" "$blk─" $blk'\\') # '|' '/' '─' '\'
[[ $virus ]] && { DHS=☢ DHC=$RED DSC=$YLW; }
sprite_hero1 () {
    control_hero1 $H1X $H1Y
    mov - || { unset HER[i]; return; }
    if [[ $life -gt 0 ]]; then
        CS=1 CL=16 OX=$H1X OY=$H1Y
    else # when heros health goes to 0 it starts to fall, explodes and bounces on the ground
        AS=0 SM=3  #spd=0.1
        [[ $OY -lt $TY ]] && ((OY++))  || { TY=$[heroendy-C2+2]; ((C2--)); }
        [[ $OY -gt $TY ]] && ((OY--))  ||   TY=$[heroendy+2]
        [[ $OX -gt -10 && $C1 -eq 0 ]] && { BOOM $SX $[OY-2]; C1=15; }
        screen+="\\e[$[endy-1];$[OX+OW]H$LND "
    fi
    case $type in
     'duel')
         re="crate ($[OX+7]|$[OX+8]|$[OX+9]|$[OX+10]|$[OX+11]) ($[OY+2]|$[OY+3]|$[OY+4]|$[OY+5]|$[OY+6]).*";;
     'team')
         re="(life|ammo|gunup) ($[OX+12]|$[OX+13]) ($[OY+1]|$[OY+2]|$[OY+3]|$[OY+4]).*|"
        re+="alien ($[OX+12]|$[OX+13]) ($[OY+1]|$[OY+2]).*|"
        re+="bfire ($[OX+12]|$[OX+13]) ($[OY+2]|$[OY+3]).*|"
        re+="boss ($[OX+12]|$[OX+13]) $[OY-1].*";;
    esac
    GN=$SKY$BLD$BLK${gun[$G]}; [[ $G -eq 5 ]] && GN=$SKY$BLD$BLK${gun[$G]}⎕
    CM1=$SKY$H1C$BLD CM2=$SKY$DIM$H1C CM3=$SKY$H1C CM4=$SKY$BLD$H1C$UND TR=${tailrotor[AS]} X1="_Y_$[OX+6]H"
    #0123456789ABCDEFG                                                                                                             ___
    #1                                                 █▓▒░                           ___                                        _/ o \_
    #2 __ ___________                                         ___                    (  o)                                      /O   O  \
    #3 |X\___.-╨─｡_                     -=>                  ( o )                    `¯´            █▓▒░     ___              (   O    O)
    #4 `─´‾‾‷\°★ º¯]─         - >                      ->     `¯´                                            (o  )              `¯¯---¯¯´
    #5        ‾‾‾‾‾                                                                                           `¯´
    #6                
    ######X####Y#####CLR  1   2   3       4        5       6       7       8        9       A        B       C       D       E   F   G  #0
    cut $SX  $OY    $SKY ' ' ' ' ' '     ' '      ' '     ' '     ' '     ' '      ' '     ' '      ' '     ' '     ' '     ' ' ' ' ' ' #1
    cut $SX $[OY+1] $CM1 ' ' '_' '_'     ' '                                         ${mainrotor[AS]}                               ' ' #2
    cut $SX $[OY+2] $CM2 ' ' '|' $TR $CM1'\\' $CM1'_' $CM1'_' $CM1'_' $CM3'.'  $CM3'-' $CM3'╨'  $CM4'─' $CM4'｡' $CM1'_' $SKY' ' ' ' ' ' #3
    cut $SX $[OY+3] $CM2 ' ' '\' ' '     ' '      ' '     ' '     '‷'     '\\' $blk'°' $S1C$H1S $SKY' ' $blk'º' $blk'¯' $CM1']' $GN ' ' #4
    cut $SX $[OY+4] $CM2 ' ' '/' '‾'     '‾'      '‾'     '‾'     '‾'     ' '      '‾'     '‾'      '‾'     '‾'     '‾' $SKY' ' ' ' ' ' #5
    cut $SX $[OY+5] $SKY ''  ''  ''      ''       ''      ''   $X1' '     ' '      ' '     ' '      ' '     ' '     ' '     ' '         #6
    [[ $C1 -gt 0  ]] && ((C1--))
    collision 1 "$re" && { BOOM $OX $OY; ((life--)); }
    HER[i]="hero1 $OX $OY 6 16 $SC $SM $CS $CL $AS $AL $C1 $C2"
}
sprite_hero2 () {
    mov - || { unset HER[i]; return; }
    if [[ $life2 -gt 0 ]]; then
        CS=1 CL=16 OX=$H2X OY=$H2Y
    else # when heros health goes to 0 it starts to fall, explodes and bounces on the ground
        AS=0 SM=3 H2Y=
        [[ $OY -lt $TY ]] && ((OY++))  || { TY=$[heroendy-C2+2]; ((C2--)); }
        [[ $OY -gt $TY ]] && ((OY--))  ||   TY=$[heroendy+2]
        [[ $OX -gt -10 && $C1 -eq 0 ]] && { BOOM $SX $[OY-2]; C1=15; }
        screen+="\\e[$[endy-1];$[OX+OW]H$LND "
    fi
    CM1=$SKY$H2C$BLD CM2=$SKY$DIM$H2C CM3=$SKY$H2C CM4=$SKY$BLD$H2C$UND TR=${tailrotor[AS]} GN=$SKY$BLD$BLK${gun[$G2]}

    case $type in
     'duel') control_hero2 $[H2X-10] $H2Y
        re="crate ($[OX-4]|$[OX-3]|$[OX-2]|$[OX-1]|$OX) ($[OY+2]|$[OY+3]|$[OY+4]|$[OY+5]|$[OY+6]).*"
        X1="_Y_$[OX+2]H"; [[ $G2 -eq 5 ]] && GN=$SKY$BLD$BLK⎕${gun[$G2]}
        #0123456789ABCDEFG
        #1                
        #2 ___________ __ 
        #3   _｡─╨-.___/X| 
        #4 ─[¯º ✠°/‴‾‾`─´ 
        #5   ‾‾‾‾‾        
        #6   
        ####################  1   2       3       4       5       6       7        8       9       A   B   C   D   E       F   G  #0
        cut $SX  $OY    $SKY ' ' ' '     ' '     ' '     ' '     ' '     ' '      ' '     ' '     ' ' ' ' ' ' ' ' ' '     ' ' ' ' #1
        cut $SX $[OY+1] $CM1 ' '                                   ${mainrotor[AS]}                       ' ' $CM1'_'     '_' ' ' #2
        cut $SX $[OY+2] $CM1 ' ' ' '     ' '     '_' $CM4'｡'     '─' $CM3'╨'      '-'     '.' $CM1'_' '_' '_' '/' $TR $CM1'|' ' ' #3
        cut $SX $[OY+3] $CM2 ' ' $GN $CM2'[' $blk'¯' $blk'º' $SKY' ' $S2C$H2S $blk'°' $CM2'/'     '‷' '‾' '‾' '`' '─'     '´' ' ' #4
        cut $SX $[OY+4] $CM2 ' ' ' '     ' '     '‾'     '‾'     '‾'     '‾'      '‾'     ' '     ' ' ' ' ' ' ' ' ' '     ' ' ' ' #5
        cut $SX $[OY+5] $SKY ''  ''   $X1' '     ' '     ' '     ' '     ' '      ' '     ' ';;                                   #6
     'team') control_hero2 $H2X $H2Y
         X1="_Y_$[OX+6]H"; [[ $G2 -eq 5 ]] && GN=$SKY$BLD$BLK${gun[$G2]}⎕
         re="(life|ammo|gunup) ($[OX+12]|$[OX+13]) ($[OY+1]|$[OY+2]|$[OY+3]|$[OY+4]).*|"
        re+="alien ($[OX+12]|$[OX+13]) ($[OY+1]|$[OY+2]).*|"
        re+="bfire ($[OX+12]|$[OX+13]) ($[OY+2]|$[OY+3]).*|"
        re+="boss ($[OX+12]|$[OX+13]) $[OY-1].*"
        #0123456789ABCDEFG
        #1                
        #2 __ ___________                                                                                                       ___________ __
        #3 |X\___.-╨─｡_                                                  - >           <=-                                        _｡─╨-.___/X|
        #4 `─´‾‾‷\°★ º¯]─     ->                                                                         <-                     ─[¯º ✠°/‴‾‾`─´
        #5        ‾‾‾‾‾                        -=>                <-                                                              ‾‾‾‾‾
        #6                                
        ####################  1   2   3       4        5       6       7       8        9       A        B       C       D       E   F   G  #0
        cut $SX  $OY    $SKY ' ' ' ' ' '     ' '      ' '     ' '     ' '     ' '      ' '     ' '      ' '     ' '     ' '     ' ' ' ' ' ' #1
        cut $SX $[OY+1] $CM1 ' ' '_' '_'     ' '                                         ${mainrotor[AS]}                               ' ' #2
        cut $SX $[OY+2] $CM2 ' ' '|' $TR $CM1'\\' $CM1'_' $CM1'_' $CM1'_' $CM3'.'  $CM3'-' $CM3'╨'  $CM4'─' $CM4'｡' $CM1'_' $SKY' ' ' ' ' ' #3
        cut $SX $[OY+3] $CM2 ' ' '`' '─'     '´'      '‾'     '‾'     '‷'     '\\' $blk'°' $S2C$H2S $SKY' ' $blk'º' $blk'¯' $CM1']' $GN ' ' #4
        cut $SX $[OY+4] $CM2 ' ' ' ' ' '     ' '      ' '     ' '     ' '     ' '      '‾'     '‾'      '‾'     '‾'     '‾' $SKY' ' ' ' ' ' #5
        cut $SX $[OY+5] $SKY ''  ''  ''      ''       ''      ''   $X1' '     ' '      ' '     ' '      ' '     ' '     ' '     ' ';;       #6
    esac
    [[ $C1 -gt 0  ]] && ((C1--))
    collision 2 "$re" && { BOOM $OX $OY; ((life2--)); }
    HER[i]="hero2 $OX $OY 6 16 $SC $SM $CS $CL $AS $AL $C1 $C2"
}
#------------------------{ Shoots }-------------------------------------------------------------------------------------
shoot=(
    "        ⎕     $RED-"  #  ->
    "$BLD$red- $BLD$red="  # -=>
    "    $red=     $red-"  # =->
    "    $RED-         ⎕") # - >
sprite_piu1 () {
    case $type in
        'duel') re="hero2 ($OX|$[OX+1]) ($[OY-1]|$[OY-2]|$[OY-3]|$[OY-4]).*";;
        'team') re="alien ($OX|$[OX+1]) $[OY-1].*|boss ($OX|$[OX+1]) ($[OY-2]|$[OY-3]|$[OY-4]).*";;
    esac
    mov + && PIU[i]="piu1 $OX $OY 1 4 $SC $SM $CS $CL $AS 3" || { unset PIU[i]; return; }
    case "$day$month$virus" in
        *covid-19)
            #0123
            #1 ==
            ################  1       2       3    #0
            cut $OX $OY $SKY ' ' $RED'=' $BLU'=';; #1
        *)
            CM1=$SKY$BLD$GRN
            #01234
            #1 -=>
            ################  1      2    3        4    #0
            cut $OX $OY $SKY ' ' ${shoot[AS]} $CM1'>';; #1
    esac
    collision 1 "$re" $OX $[OY-1] && unset PIU[i]
}
sprite_piu2 () {
    case $type in
        'duel') direction='-' re="hero1 ($[OX-10]|$[OX-11]) ($[OY-1]|$[OY-2]|$[OY-3]|$[OY-4]).*";;
        'team') direction='+' re="alien ($OX|$[OX+1]) $[OY-1].*|boss ($OX|$[OX+1]) ($[OY-2]|$[OY-3]|$[OY-4]).*";;
    esac
    mov $direction && PIU[i]="piu2 $OX $OY 1 4 $SC $SM $CS $CL $AS 3" || { unset PIU[i]; return; }
    case "$day$month$virus$type" in
        *duel)
            CM1=$SKY$BLD$BLU
            #01234
            #1<=- 
            ################  1      2    3    4    #0
            cut $SX $OY $CM1 '<' ${shoot[AS]} ' ';; #1
        *covid-19*)
            #0123
            #1 ==
            ################  1       2       3    #0
            cut $OX $OY $SKY ' ' $RED'=' $BLU'=';; #1
        *)  CM1=$SKY$BLD$BLU
            #01234
            #1 -=>
            ################  1      2    3        4    #0
            cut $OX $OY $SKY ' ' ${shoot[AS]} $CM1'>';; #1
    esac
    collision 2 "$re" $OX $[OY-1] && unset PIU[i]
}

bshoot=('█ ▓ ▒ ░'
        '▓ ▒ ░ ▒'
        '▒ ░ ▒ ▓'
        '░ ▒ ▓ █'
        '▒ ▓ █ ▓'
        '▓ █ ▓ ▒')
sprite_bfire () {
    CM1=$SKY$BLD$ylw
    mov - && ENM[i]="bfire $OX $OY 1 5 $SC $SM $CS $CL $AS 5 $i" || { unset ENM[i]; return; }
    #012345
    #1█▓▒░ 
    ################ 1   2   3   4  5  #0
    cut $SX $OY $CM1 ${bshoot[AS]} ' ' #1
}
#------------------------{ Aliens }-------------------------------------------------------------------------------------
small=("${SKY}⎕  ${SKY}⎕  ${RED}o"
       "${SKY}⎕  ${RED}o  ${SKY}⎕"
       "${RED}o  ${SKY}⎕  ${SKY}⎕"
       "${SKY}⎕  ${SKY}⎕  ${SKY}⎕")

CM1=$SKY$UND$BLD$grn
pumtop=( "$CM1"'\\' "$CM1"'\\' "$CM1|" "$CM1|" "$CM1/" "$CM1/")
pumface=("${RED}O ${RED}… ${RED}o"
         "${RED}… ${RED}o       ⎕"
         "${RED}o       ⎕ ${RED}O"
         "      ⎕       ⎕       ⎕$CM1"
         "      ⎕       ⎕ ${RED}O"
         "      ⎕ ${RED}O ${RED}…")

top1=("$RED." "$RED," "$RED'" "$RED'")
top2=("$RED'" "$RED'" "$RED." "$RED,")
mid1=("$RED-" "$RED+" "$RED'" "$RED'")
mid2=("$RED+" "$RED'" "$RED'" "$RED-")
bot1=($RED'´'  $RED'"' $RED'`' $RED'"')
bot2=($RED'"'  $RED'`' $RED'"' $RED'´')
cen=("$RED"o  "$RED+" "$RED*" "$RED+")

sprite_alien () {
    case "$day$month$virus" in
        3110)
            mov - && ENM[i]="alien $OX $OY 3 5 $SC $SM $CS $CL $AS 5 $i" || { unset ENM[i]; ((enumber--)); return; }
            CM1=$SKY$BLD$ylw CM2=$SKY$UND$DIM$grn CM3=$SKY$ylw X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H"
            #0123456
            #1 _\_  
            #2(O…o) 
            #3 `¯´  
            ####################  1     2        3            4   5   6  #0
            cut $SX  $OY    $CM1 '' $X1'_' ${pumtop[AS]} $CM1'_' ' '     #1
            cut $SX $[OY+1] $CM1 '('       ${pumface[AS]}  "$CM1"')' ' ' #2
            cut $SX $[OY+2] $CM1 '' $X2'`'      '¯'          '´' ' ';;   #3
        *covid-19)
            mov - && ENM[i]="alien $OX $OY 3 5 $SC $SM $CS $CL $AS 3 $i" || { unset ENM[i]; ((enumber--)); return; }
            CM1=$SKY$DIM$BLK X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H"
            #0123456
            #1 ._,  
            #2-(*)- 
            #3 ´‾`  
            ####################  1           2         3          4    5          6  #0
            cut $SX  $OY    $CM1 '' $X1${top1[AS]} $CM1'_' ${top2[AS]} ' '            #1
            cut $SX $[OY+1] $CM1 ${mid1[AS]} '(' ${cen[AS]} "$CM1"')' ${mid2[AS]} ' ' #2
            cut $SX $[OY+2] $CM1 '' $X2${bot1[AS]} $CM1'‾' ${bot2[AS]} ' ';;          #3
        *)
            mov - && ENM[i]="alien $OX $OY 3 5 $SC $SM $CS $CL $AS 3 $i" || { unset ENM[i]; ((enumber--)); return; }
            CM1=$SKY$DIM$BLK CM2=$BLD$BLK X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H"
            #0123456
            #1 ___  
            #2( o ) 
            #3 `¯´  
            ####################  1     2       3       4    5   6  #0
            cut $SX  $OY    $CM1 '' $X1'_' $CM2'_' $CM1'_'  ' '     #1
            cut $SX $[OY+1] $CM1 '('     ${small[AS]} "$CM1"')' ' ' #2
            cut $SX $[OY+2] $CM1 '' $X2'`'     '¯'     '´'  ' ';;   #3
    esac
}

big1=("      ⎕       ⎕ ${YLW}O           ⎕       ⎕       ⎕ ${YLW}O"
      "      ⎕       ⎕       ⎕ $BLD${YLW}O       ⎕       ⎕       ⎕"
      "${YLW}O       ⎕       ⎕           ⎕ ${YLW}O       ⎕       ⎕"
      "      ⎕ ${YLW}O       ⎕           ⎕       ⎕ ${YLW}O       ⎕")

big2=("      ⎕ ${BLU}O       ⎕           ⎕       ⎕ ${BLU}O       ⎕"
      "${BLU}O       ⎕       ⎕           ⎕ ${BLU}O       ⎕       ⎕"
      "      ⎕       ⎕       ⎕ $BLU${BLD}O       ⎕       ⎕       ⎕"
      "      ⎕       ⎕ ${BLU}O           ⎕       ⎕       ⎕ ${BLU}O")

big3=("    ⎕ $RED*       ⎕     ⎕       ⎕ $RED+     ⎕"
      "$RED+     ⎕       ⎕     ⎕ ${RED}o     ⎕     ⎕"
      "    ⎕     ⎕       ⎕ $RED+       ⎕     ⎕     ⎕"
      "    ⎕     ⎕ ${RED}o     ⎕       ⎕     ⎕ $RED+")

big4=("      ⎕     ⎕ $RED*     ⎕     ⎕       ⎕ $RED+"
      "      ⎕     ⎕     ⎕ $RED+     ⎕       ⎕     ⎕"
      "${RED}o     ⎕     ⎕     ⎕ $RED*       ⎕     ⎕"
      "      ⎕ $RED*     ⎕     ⎕     ⎕ ${RED}o     ⎕")

mouthtop=("${RED}/ ${RED}V ${RED}V ${RED}V ${RED}V ${RED}V $RED"'\\'
          "${RED}/ ${RED}v ${RED}v ${RED}v ${RED}v ${RED}v $RED"'\\'
          "${RED}. ${RED}- ${RED}- ${RED}- ${RED}- ${RED}- ${RED}."
          "      ⎕       ⎕       ⎕       ⎕       ⎕       ⎕       ⎕"
          "${RED}. ${RED}- ${RED}- ${RED}- ${RED}- ${RED}- ${RED}."
          "${RED}/ ${RED}v ${RED}v ${RED}v ${RED}v ${RED}v ${RED}"'\\'
          "${RED}/ ${RED}V ${RED}V ${RED}V ${RED}V ${RED}V ${RED}"'\\')

mouthlow=("${RED}V   ${RED}v ${RED}v ${RED}v ${RED}v ${RED}v ${RED}V"
          "${RED}V   ${RED}^ ${RED}^ ${RED}^ ${RED}^ ${RED}^ ${RED}V"
          ${RED}'`'" ${RED}¯ ${RED}¯ ${RED}¯ ${RED}¯ ${RED}¯ ${RED}´"
          "      ⎕   ${RED}‾ ${RED}‾ ${RED}‾ ${RED}‾ ${RED}‾       ⎕"
          ${RED}'`'" ${RED}- ${RED}- ${RED}- ${RED}- ${RED}- ${RED}´"
          "${RED}V   ${RED}^ ${RED}^ ${RED}^ ${RED}^ ${RED}^ ${RED}V"
          "${RED}V   ${RED}v ${RED}v ${RED}v ${RED}v ${RED}v ${RED}V")

TX=$halfendx TY=$bossendy
sprite_boss () {
    [[ $H2Y ]] && HY=$[H2Y-1] || HY=$[H1Y-1] # kill client first
    if [[ $bhealth -gt 0 ]]; then
        #-{ Boss fire }--------------------------------------------------------
        [[ $OY -eq $HY && $C1 -eq 0 ]] && { ENM+=("bfire $[OX-4] $[OY+4] 1 5 0 0 1 5 $[RANDOM%5] 5 ${#ENM[@]}"); C1=20; }
        #-{ Boss move }--------------------------------------------------------
        [[ $OY -lt $HY ]] && ((OY++))
        [[ $OY -gt $HY ]] && ((OY--)) # this is a black magic
        [[ $OX -gt $TX ]] && mov - || { TX=$bossendx; SX=$OX; }
        [[ $OX -lt $TX ]] && mov + || { TX=$halfendx; SX=$OX; }
        #-{ Aliens out }-------------------------------------------------------
        EX=$[OX+2] EY=$[OY+5]; [[ $EY -gt $[enmyendy+3] ]] && EY=$[enmyendy+3]
    else # when boss' health goes to 0 it starts to fall, explodes and bounces on the ground
        AS=0; SM=3; mov - || the_end=win
        [[ $OY -lt $TY ]] && ((OY++))  || { TY=$[bossendy-C2]; ((C2--)); }
        [[ $OY -gt $TY ]] && ((OY--))  ||   TY=$bossendy
        [[ $OX -gt -10 && $C1 -eq 0 ]] && { BOOM $OX $OY; C1=15; }
    fi
    [[ $C1 -gt 0 ]] && ((C1--))
    case "$day$month$virus" in
        3110)
            CM1=$SKY$BLD$ylw CM2=$SKY$BLD$RED EYE="$CM2( $CM2⁐ $CM2)"
            X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H" X3="_Y_$[OX+1]H" X4="_Y_$[OX+2]H"
            #0123456789ABCD
            #1             
            #2   .-./.-.   
            #3  /(_) (_)\  
            #4 ❲ /VVVVV\ ❳ 
            #5  \VvvvvvV/ 
            #6   `¯---¯´  
            #7             
            ####################  1     2     3   4   5   6         7           8   9   A   B       C   D  #0
            cut $SX  $OY    $SKY '' $X1' '   ' ' ' ' ' ' ' '       ' '         ' ' ' ' ' ' ' '     ' '     #1
            cut $SX $[OY+1] $CM1 '' $X2' '   ' ' '.' '-' '.' ${pumtop[AS]} $CM1'.' '-' '.' ' '     ' ' ' ' #2
            cut $SX $[OY+2] $CM1 ' '   ' '   '/'    $EYE           ' '            $EYE $CM1'\\'    ' ' ' ' #3
            cut $SX $[OY+3] $CM1 ' '   '❲'   ' '           ${mouthtop[AS]}                 ' ' $CM1'❳' ' ' #4
            cut $SX $[OY+4] $CM1 ' '   ' '   '\\'          ${mouthlow[AS]}             $CM1'/'     ' ' ' ' #5
            cut $SX $[OY+5] $CM1 '' $X3' '   ' ' '`' '¯' '-'       '-'         '-' '¯' '´' ' '     ' '     #6
            cut $SX $[OY+6] $SKY ''    '' $X4' ' ' ' ' ' ' '       ' '         ' ' ' ' ' ' ' '             #7
            ENM[i]="boss $OX $OY 6 14 $SC $SM $CS $CL $AS 6 $C1 $C2";;
        *covid-19)
            CM1=$SKY$DIM$BLK CM2=$BLD$BLK X1="_Y_$[OX+2]H" X2="_Y_$[OX+2]H" X3="_Y_$[OX+1]H" X4="_Y_$[OX+1]H"
            #0123456789ABCD
            #1             
            #2   . ___,   
            #3   /`   `\  
            #4 +| *   o |+
            #5  \   +   /  
            #6  *`-.,.-`+  
            #7             
            ####################  1        2      3        4           5   6   7   8       9       A       B       C       D  #0
            cut $SX  $OY    $SKY ''       ''  $X1' '      ' '         ' ' ' ' ' ' ' '     ' '     ' '     ' '                 #1
            cut $SX $[OY+1] $CM1 ''       ''  $X2' '  ${top2[AS]} $CM1' ' '_' '_' '_' ${top1[AS]} ' '     ' '                 #2
            cut $SX $[OY+2] $CM1 ' '      ' '    ' '      '/'         '`' ' ' ' ' ' '     '`'     '\\'    ' '     ' '     ' ' #3
            cut $SX $[OY+3] $CM1 ' ' ${mid2[AS]} '|'                  ${big3[AS]}                     $CM1'|' ${mid1[AS]} ' ' #4
            cut $SX $[OY+4] $CM1 ' '      ' '    '\\'                 ${big4[AS]}                     $CM1'/'     ' '     ' ' #5
            cut $SX $[OY+5] $CM1 ''    $X3' ' ${bot2[AS]} $CM1'`'     '-' '.' ',' '.'     '-'     '`' ${bot1[AS]} ' '         #6
            cut $SX $[OY+6] $SKY ''    $X4' '    ' '      ' '         ' ' ' ' ' ' ' '     ' '     ' '     ' '     ' '         #7
            ENM[i]="boss $OX $OY 7 13 $SC $SM $CS $CL $AS 3 $C1 $C2";;
        *)
            CM1=$SKY$DIM$BLK CM2=$BLD$BLK X1="_Y_$[OX+4]H" X2="_Y_$[OX+2]H" X3="_Y_$[OX+1]H" X4="_Y_$[OX+1]H"
            #0123456789ABCD
            #1             
            #2     ___          
            #3   _/   \_   
            #4  /       \  
            #5 (         ) 
            #6  `¯¯---¯¯´  
            #7             
            ####################  1     2     3   4     5    6   7   8       9    A   B         C   D  #0
            cut $SX  $OY    $SKY ''    ''    ''  '' $X1' '  ' ' ' ' ' '     ' '                        #1
            cut $SX $[OY+1] $CM2 ''    '' $X2' ' ' '   ' '  '_' '_' '_'     ' '  ' ' ' '               #2
            cut $SX $[OY+2] $CM1 '' $X3' '   ' ' '_'   '/' ${small[AS]} $CM2'\\' '_' ' '       ' '     #3
            cut $SX $[OY+3] $CM1 ' '   ' '   '/'            ${big1[AS]}          $CM2'\\'      ' ' ' ' #4
            cut $SX $[OY+4] $CM1 ' '   '('   ' '            ${big2[AS]}              ' ' "$CM2"')' ' ' #5
            cut $SX $[OY+5] $CM1 ' '   ' '   '`' '¯'   '¯'  '-' '-' '-'     '¯'  '¯' '´'       ' ' ' ' #6
            cut $SX $[OY+6] $SKY '' $X4' '   ' ' ' '   ' '  ' ' ' ' ' '     ' '  ' ' ' '       ' '     #7
            ENM[i]="boss $OX $OY 6 14 $SC $SM $CS $CL $AS $AL $C1 $C2";;
    esac
}
#------------------------{ Bonuses }------------------------------------------------------------------------------------
sprite_ammo () {
    case "$day$month$virus" in
        *covid-19)
            mov - && ENM[i]="ammo $OX $OY 3 6 $SC $SM $CS $CL $AS 3 $i" || { unset ENM[i]; return; }
            CM1=$SKY$BLD$red CM2=$SKY$BLU X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H" 
            #0123456
            #1 _ _  
            #2(_|_) 
            #3(_|_) 
            ####################  1     2   3       4          5  6    #0
            cut $SX  $OY    $CM1 '' $X1'_' ' ' $CM2'_' "$CM2"' '       #1
            cut $SX $[OY+1] $CM1 '('   '_' '|' $CM2'_' "$CM2"')' ' '   #2
            cut $SX $[OY+2] $CM1 '('   '_' '|' $CM2'_' "$CM2"')' ' ';; #3
        *)
            mov - && ENM[i]="ammo $OX $OY 3 4 $SC $SM $CS $CL $AS 3 $i" || { unset ENM[i]; return; }
            CM1=$SKY$BLD$red CM2=$SKY$GRN
            #01234
            #1-=> 
            #2-=> 
            #3-=> 
            ####################  1   2       3   4    #0
            cut $SX  $OY    $CM1 '-' '=' $CM2'>' ' '   #1
            cut $SX $[OY+1] $CM1 '-' '=' $CM2'>' ' '   #2
            cut $SX $[OY+2] $CM1 '-' '=' $CM2'>' ' ';; #3
    esac
}
sprite_life () {
    mov - && ENM[i]="life $OX $OY 3 4 $SC $SM $CS $CL $AS 3 $i" || { unset ENM[i]; return; }
    CM1=$SKY$RED X1="_Y_$[OX+1]H"
    #01234
    #1/V\ 
    #2\ / 
    #3 V  
    ####################  1     2   3    4  #0
    cut $SX  $OY    $CM1 '/'   'V' '\\' ' ' #1
    cut $SX $[OY+1] $CM1 '\\'  ' ' '/'  ' ' #2
    cut $SX $[OY+2] $CM1 '' $X1'V' ' '      #3
}
sprite_gunup () {
    mov - && ENM[i]="gunup $OX $OY 3 4 $SC $SM $CS $CL $AS 3 $i" || { unset ENM[i]; return; }
    CM1=$SKY$BLK CM2=$SKY$blk CM3=$SKY$UND$blk
    case ${G} in
        1) #01234
           #1‖—— 
           #2‖   
           #3‖—— 
           ####################  1       2       3   4    #0
           cut $SX  $OY    $CM1 '‖' $CM2'—' $CM2'—' ' '   #1
           cut $SX $[OY+1] $CM1 '‖' $SKY' '               #2
           cut $SX $[OY+2] $CM1 '‖' $CM2'—' $CM2'—' ' ';; #3
        2) #01234
           #1‖—— 
           #2‖—— 
           #3‖—— 
           ####################  1       2       3   4    #0
           cut $SX  $OY    $CM1 '‖' $CM2'—' $CM2'—' ' '   #1
           cut $SX $[OY+1] $CM1 '‖' $CM2'—' $CM2'—' ' '   #2
           cut $SX $[OY+2] $CM1 '‖' $CM2'—' $CM2'—' ' ';; #3
        3) #01234
           #1‖== 
           #2‖   
           #3‖== 
           ####################  1       2       3       4    #0
           cut $SX  $OY    $CM1 '‖' $CM3'‾' $CM3'‾' $SKY' '   #1
           cut $SX $[OY+1] $CM1 '‖' $SKY' '                   #2
           cut $SX $[OY+2] $CM1 '‖' $CM3'‾' $CM3'‾' $SKY' ';; #3
        *) #01234
           #1‖== 
           #2‖—— 
           #3‖== 
           ####################  1       2       3       4    #0
           cut $SX  $OY    $CM1 '‖' $CM3'‾' $CM3'‾' $SKY' '   #1
           cut $SX $[OY+1] $CM1 '‖' $CM2'—' $CM2'—'     ' '   #2
           cut $SX $[OY+2] $CM1 '‖' $CM3'‾' $CM3'‾' $SKY' ';; #3
    esac
}
#------------------------{ Ad plane }-----------------------------------------------------------------------------------
flame1=("$red- ⎕"       "$ylw~ ⎕"       "$red- $RED~ ⎕" "$ylw- ⎕ ⎕")
flame2=("$ylw- ⎕"       "$red- $RED~ ⎕" "$red~ ⎕ ⎕"       "$YLW~ ⎕")
flame3=("$red- $RED~ ⎕" "$red~ ⎕ ⎕"       "$YLW~ ⎕"       "$ylw- ⎕")
sprite_msngr () {
    mov - && BP2[i]="msngr $OX $OY 4 $width $SC $SM $CS $CL $AS $AL" || { unset BP2[i]; return; }
    X1="_Y_$[OX+7]H" X2="_Y_$[OX+1]H" X3="_Y_$[OX+12]H" X4="_Y_$[OX+4]H" X5="_Y_$[OX+12]H"
    CM1=$SKY$BLD$blk CM2=$SKY$DIM$blk CM3=$SKY$blk CM4= CM5= CM6=$BLD$red
    case "$day$month" in 0905) CM4=$bylw CM5=$bblk;; esac
    drop_crate
    #0123456789ABCD...
    #1       __    
    #2 _____/_/   +------------------+~
    #3(°_\ |_)---<| Die alien scum! -~
    #4    \|      +-----------------~
    ####################  1       2   3       4      5        6       7       8   9   A   B   C         D       E       F  ...                            #0
    cut $SX  $OY    $CM1 ''      ''  ''      ''     ''       ''      ''   $X1'_' '_' ' '                                                                  #1
    cut $SX $[OY+1] $CM2 ''   $X2'_' '_'     '_'    '_'      '_'     '/'     '_' '/' ' ' ''  '' $X3$CM4'+' $CM4'-' $CM4'-' ${line[@]}  $SKY${flame1[AS]}  #2
    cut $SX $[OY+2] $CM1 '(' $UND'°' ' ' $CM2'\\'   ' '  $CM3'|' $UND' ' $CM3')' '-' '-' '-' '<'   $CM5'|' $CM5' ' ${new_ad[@]} $CM5' ' $SKY${flame2[AS]} #3
    cut $SX $[OY+3] $CM2 ''      ''  ''       '' $X4'\\' $CM3'|'     ' '     ''  ''  ''  ''  '' $X5$CM4'+' ${line[@]} $SKY${flame3[AS]}                   #4
}

sprite_crate () {
    movy && ENM[$i]="crate $OX $OY $OH $OW $SC $SM $CS $CL 0 0 0 0 $i" || { unset ENM[$i]; boom $OX $boomendy; boom $OX $[boomendy-3]; crate=0; }
    CM1=$SKY$ylw CM2=$SKY$blk CM3=$SKY$BLU SS="$RED ? $CM3"
    ########################1234567###01234567
    cuty  $OX    $OY 7 $SKY'       ' #1       
    cuty  $OX    $OY 6 $CM1' ¸.—.¸ ' #2 ¸.—.¸ 
    cuty  $OX    $OY 5 $CM1'(︹_︹)'  #3(︹_︹)
    cuty $[OX+1] $OY 4  $CM2'╲╱ ╲╱'  #4 ╲╱ ╲╱ 
    cuty $[OX+1] $OY 3  $CM3'╔╧╦╧╗'  #5 ╔╧╦╧╗ 
    cuty $[OX+1] $OY 2  $CM3"╠$SS╣"  #6 ╠ ? ╣ 
    cuty $[OX+1] $OY 1  $CM3'╚═╩═╝'  #7 ╚═╩═╝ 
}
#------------------------{ Clouds }-------------------------------------------------------------------------------------
case $month in
    0[1-4]|12) C1C=$SKY$DIM$CYN;; # winter & early spring
    0[5-8]   ) C1C=$SKY$DIM$WHT;; # late spring & summer
    09|1[0-1]) C1C=$SKY$blk    ;; # autumn
esac
sprite_cloud1 () {
    mov - && BP1[i]="cloud1 $OX $OY 3 6 $SC $SM $CS $CL $AS $AL" || { unset BP1[i]; return; }
    X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H"
    #01234567
    #1 ,-+.  
    #2(    ) 
    #3 `+-´  
    ####################  1     2   3   4   5   6   7  #0
    cut $SX  $OY    $C1C '' $X1',' '-' '+' '.' ' '     #1
    cut $SX $[OY+1] $C1C '('   ' ' ' ' ' ' ' ' ')' ' ' #2
    cut $SX $[OY+2] $C1C '' $X2'`' '+' '-' '´' ' '     #3
}

case $month in
    0[1-4]|12) C2C=$SKY$CYN;; # winter & early spring
    0[5-8]   ) C2C=$SKY$WHT;; # late spring & summer
    09|1[0-1]) C2C=$SKY$BLK;; # autumn
esac
sprite_cloud2 () {
    mov - && BP2[i]="cloud2 $OX $OY 3 8 $SC $SM $CS $CL $AS $AL" || { unset BP2[i]; return; }
    X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H"
    #0123456789
    #1 ,-._..  
    #2(      ) 
    #3 `-...´  
    ####################  1     2   3   4   5   6   7   8   9  #0
    cut $SX  $OY    $C2C '' $X1',' '-' '.' '_' '.' '.' ' '     #1
    cut $SX $[OY+1] $C2C '('   ' ' ' ' ' ' ' ' ' ' ' ' ')' ' ' #2
    cut $SX $[OY+2] $C2C '' $X2'`' '-' '.' '.' '.' '´' ' '     #3
}

case $month in
    0[1-4]|12) C3C=$SKY$BLD$CYN;; # winter & early spring
    0[5-8]   ) C3C=$SKY$BLD$WHT;; # late spring & summer
    09|1[0-1]) C3C=$SKY$DIM$BLK;; # autumn
esac
sprite_cloud3 () {
    mov - && BP3[i]="cloud3 $OX $OY 3 11 $SC $SM $CS $CL $AS $AL" || { unset BP3[i]; return; }
    X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H"
    #0123456789ABC
    #1 ,+¯`.-¯`.  
    #2(         ) 
    #3 `--.,,.-´  
    ####################  1     2   3   4   5   6   7   8   9   A   B   C  #0
    cut $SX  $OY    $C3C '' $X1',' '+' '¯' '`' '.' '-' '¯' '`' '.' ' '     #1
    cut $SX $[OY+1] $C3C '('   ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ' ')' ' ' #2
    cut $SX $[OY+2] $C3C '' $X2'`' '-' '-' '.' ',' ',' '.' '-' '´' ' '     #3
}

#------------------------{ Trees }--------------------------------------------------------------------------------------
case $month in
    0[1-4]|12) T1C=$SKY$DIM$WHT tree1H=3;; # winter & early spring
    0[5-8]   ) T1C=$SKY$DIM$GRN tree1H=4;; # late spring & summer
    09|1[0-1]) T1C=$SKY$DIM$YLW tree1H=4;; # autumn
esac
sprite_tree1 () {
    case $month in
        0[1-4]|12)
            mov - && BP1[i]="tree1 $OX $OY 3 2 $SC $SM $CS $CL $AS $AL" || { unset BP1[i]; return; }
            CM1="$SKY$DIM$blk" X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H"
            #01234
            #1 |/ 
            #2\|  
            #3 |  
            ####################  1        2   3   4  #0
            cut $SX  $OY    $T1C ''    $X1'|' '/' ' ' #1
            cut $SX $[OY+1] $T1C '\\' $CM1'|' ' '     #2
            cut $SX $[OY+2] $CM1 ''    $X2'|' ' ';;   #3
        *)
            mov - && BP1[i]="tree1 $OX $OY 4 2 $SC $SM $CS $CL $AS $AL" || { unset BP1[i]; return; }
            CM1="$SKY$DIM$blk" X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H" 
            #01234
            #1 _  
            #2/ \ 
            #3\|/ 
            #4 |  
            ####################  1        2       3    4  #0
            cut $SX  $OY    $T1C ''    $X1'_'     ' '      #1
            cut $SX $[OY+1] $T1C '/'      ' '     '\\' ' ' #2
            cut $SX $[OY+2] $T1C '\\' $CM1'|' $T1C'/'  ' ' #3
            cut $SX $[OY+3] $CM1 ''    $X2'|'     ' ';;    #4
    esac
}

case $month in
    0[1-4]|12) T2C=$SKY$WHT tree2H=5;; # winter & early spring
    0[5-8]   ) T2C=$SKY$GRN tree2H=6;; # late spring & summer
    09|1[0-1]) T2C=$SKY$YLW tree2H=6;; # autumn
esac
sprite_tree2 () {
    case $month in
        0[1-4]|12)
            mov - && BP2[i]="tree2 $OX $OY 5 5 $SC $SM $CS $CL $AS $AL" || { unset BP2[i]; return; }
            X1="_Y_$[OX+3]H" X2="_Y_$[OX+1]H" X3="_Y_$[OX+2]H" X4="_Y_$[OX+2]H"
            #0123456
            #1   |_ 
            #2\||/  
            #3 \║|_ 
            #4  ║/  
            #5  ║   
            ####################  1     2        3       4   5   6  #0
            cut $SX  $OY    $T2C ''    ''       ''   $X1'|' '_' ' ' #1
            cut $SX $[OY+1] $T2C '\\'  '|'  $blk'|'     '/' ' '     #2
            cut $SX $[OY+2] $blk '' $X2'\\'     '║' $T2C'|' '_' ' ' #3
            cut $SX $[OY+3] $blk ''    ''    $X3'║'     '/' ' '     #4
            cut $SX $[OY+4] $blk ''    ''    $X4'║'     ' ';;       #5
        *)
            mov - && BP2[i]="tree2 $OX $OY 6 5 $SC $SM $CS $CL $AS $AL" || { unset BP2[i]; return; }
            X1="_Y_$[OX+1]H" X2="_Y_$[OX+1]H" X3="_Y_$[OX+2]H" X4="_Y_$[OX+2]H"
            #0123456
            #1 _._  
            #2/   \ 
            #3\ | / 
            #4 \║/\ 
            #5  ║_/ 
            #6  ║   
            ####################  1     2        3       4       5    6  #0
            cut $SX  $OY    $T2C '' $X1'_'      '.'     '_'     ' '      #1
            cut $SX $[OY+1] $T2C '/'   ' '      ' '     ' '     '\\' ' ' #2
            cut $SX $[OY+2] $T2C '\\'  ' '  $blk'|'     ' ' $T2C'/'  ' ' #3
            cut $SX $[OY+3] $T2C '' $X2'\\' $blk'║' $T2C'/' $T2C'\\' ' ' #4
            cut $SX $[OY+4] $blk ''    ''    $X3'║' $T2C'_' $T2C'/'  ' ' #5
            cut $SX $[OY+5] $blk ''    ''    $X4'║'     ' ';;            #6
    esac
}

case $month in
    0[1-4]|12) T3C=$SKY$BLD$cyn tree3H=8;; # winter & early spring
    0[5-8]   ) T3C=$SKY$GRN     tree3H=9;; # late spring & summer
    09|1[0-1]) T3C=$SKY$DIM$red tree3H=9;; # autumn
esac
sprite_tree3 () {
    case "$day$month" in
        2[1-9]12|3[0-1]12|0[1-9]01|1001)
            mov - && BP3[i]="tree3 $OX $OY 8 12 $SC $SM $CS $CL $AS $AL" || { unset BP3[i]; return; }
            X1="_Y_$[OX+6]H" X2="_Y_$[OX+4]H"     X3="_Y_$[OX+4]H" X4="_Y_$[OX+4]H$RED"
            X5="_Y_$[OX+2]H" X6="_Y_$[OX+2]H$red" X7="_Y_$[OX+6]H"
            #0123456789ABCD
            #1      ★      
            #2    _❅|●     
            #3    -/○\❄-   
            #4    ●/|\\○   
            #5  _/❄/●\❅\   
            #6  ○///|\❄\●  
            #7_/❅/●/|○\❅\- 
            #8      ║      
            ####################  1   2       3       4       5       6       7       8       9         A        B    C   D  #0
            cut $SX  $OY    $RED ''  ''      ''      ''      ''      ''   $X1'★'     ' '                                     #1
            cut $SX $[OY+1] $GRN ''  ''      ''      ''   $X2'_' $cyn'❅' $GRN'|' $BLU'●'      ' '                            #2
            cut $SX $[OY+2] $GRN ''  ''      ''      ''   $X3'-'     '/' $YLW'○' $GRN'\\' $CYN'❄'  $GRN'-'      ' '          #3
            cut $SX $[OY+3] $GRN ''  ''      ''      ''   $X4'●' $GRN'/'     '|'     '\\'     '\\' $ylw'○'      ' '          #4
            cut $SX $[OY+4] $GRN ''  ''   $X5'_'     '/' $cyn'❄' $GRN'/' $blu'●' $GRN'\\' $cyn'❅'  $GRN'\\'     ' '          #5
            cut $SX $[OY+5] $GRN ''  ''   $X6'○' $GRN'/'     '/'     '/'     '|'     '\\' $CYN'❄'  $GRN'\\' $RED'●'  ' '     #6
            cut $SX $[OY+6] $GRN '_' '/' $cyn'❅' $GRN'/' $YLW'●' $GRN'/'     '|' $RED'○'  $GRN'\\' $cyn'❅'  $GRN'\\' '-' ' ' #7
            cut $SX $[OY+7] $BLK ''  ''      ''      ''      ''      ''   $X7'║'     ' ';;                                   #8
        0[1-4]|12)
            mov - && BP3[i]="tree3 $OX $OY 8 9 $SC $SM $CS $CL $AS $AL" || { unset BP3[i]; return; }
            X1="_Y_$[OX+2]H" X2="_Y_$[OX+3]H" X3="_Y_$[OX+1]H" X4="_Y_$[OX+3]H" X5="_Y_$[OX+4]H" X6="_Y_$[OX+4]H" X7="_Y_$[OX+4]H"
            #0123456789A
            #1  \|      
            #2   \| |_  
            #3_\_ ║/    
            #4 /\ ║ \/_ 
            #5   \║ /   
            #6    ║/    
            #7    ║     
            #8    ║     
            ####################  1     2     3     4       5       6       7    8   9   A  #0
            cut $SX  $OY    $T3C ''    '' $X1'\\'  '|'     ' '                              #1
            cut $SX $[OY+1] $BLK ''    ''    '' $X2'\\'    '|'     ' ' $T3C'|'  '_' ' '     #2
            cut $SX $[OY+2] $T3C '_'   '\\'  '_'   ' ' $BLK'║'     '/'     ' '              #3
            cut $SX $[OY+3] $T3C '' $X3'/'   '\\'  ' ' $BLK'║' $T3C' '     '\\' '/' '_' ' ' #4
            cut $SX $[OY+4] $BLK ''    ''    '' $X4'\\'    '║'     ' '     '/'  ' '         #5
            cut $SX $[OY+5] $BLK ''    ''    ''    ''   $X5'║'     '/'     ' '              #6
            cut $SX $[OY+6] $BLK ''    ''    ''    ''   $X6'║'     ' '                      #7
            cut $SX $[OY+7] $BLK ''    ''    ''    ''   $X7'║'     ' ';;                    #8
        *)
            mov - && BP3[i]="tree3 $OX $OY 9 9 $SC $SM $CS $CL $AS $AL" || { unset B3[i]; return; }
            X1="_Y_$[OX+3]H" X2="_Y_$[OX+2]H" X3="_Y_$[OX+1]H" X4="_Y_$[OX+3]H" X5="_Y_$[OX+4]H" X6="_Y_$[OX+4]H" X7="_Y_$[OX+4]H"
            #0123456789A
            #1   _._    
            #2  /   \   
            #3 _\ | /   
            #4/  \║/__  
            #5\_\/║/  \ 
            #6   \║|/_/ 
            #7    ║/    
            #8    ║     
            #9    ║     
            ####################  1     2       3        4        5       6       7       8   9    A  #0
            cut $SX  $OY    $T3C ''    ''      ''    $X1'_'      '.'     '_'     ' '                  #1
            cut $SX $[OY+1] $T3C ''    ''   $X2'/'      ' '      ' '     ' '     '\\'    ' '          #2
            cut $SX $[OY+2] $T3C '' $X3'_'     '\\'     ' '  $BLK'|'     ' ' $T3C'/'     ' '          #3
            cut $SX $[OY+3] $T3C '/'   ' '     ' '      '\\' $BLK'║' $T3C'/'     '_'     '_' ' '      #4
            cut $SX $[OY+4] $T3C '\\'  '_' $BLK'\\' $T3C'/'  $BLK'║' $T3C'/'     ' '     ' ' '\\' ' ' #5
            cut $SX $[OY+5] $BLK ' '   ' '     ' '   $X4'\\'     '║' $T3C'|' $BLK'/' $T3C'_' '/'  ' ' #6
            cut $SX $[OY+6] $BLK ''    ''      ''       ''    $X5'║'     '/'     ' '                  #7
            cut $SX $[OY+7] $BLK ''    ''      ''       ''    $X6'║'     ' '                          #8
            cut $SX $[OY+8] $BLK ''    ''      ''       ''    $X7'║'     ' ';;                        #9
    esac
}
#------------------------{ Bird }---------------------------------------------------------------------------------------
# ⌄ _ 
#     ^
sprite_bird () {
    mov - && BP1[i]="bird $OX $OY 2 2 $SC $SM $CS $CL $AS $AL" || { unset BP1[i]; return; }
    case $AS in
          0) cut $SX  $OY    $SKY$blk '⌄' ' '
             cut $SX $[OY+1] $SKY     ' ' ' ';;
          1) cut $SX  $OY    $SKY$blk '_' ' '
             cut $SX $[OY+1] $SKY     ' ' ' ';;
          2) cut $SX  $OY    $SKY     ' ' ' '
             cut $SX $[OY+1] $SKY$blk '^' ' ';;
    esac
}
#------------------------{ House }--------------------------------------------------------------------------------------
# ╌ ╍ ─ ━ ┄ ┅ ┈ ┉ ═ ╴╶ ╸╺ ╼ ╾ ╲ ╵ ╷ ╹ ╻ ╽ ╿ │ ┃ ╎ ╏ ┆ ┇ ┊ ┋ ╰ ╱ ┌ ┍ ┎ ┏ ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟ ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ 
# ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿ ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╟ ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩
sprite_house1 () { #                          ▕ ╪ ╫ ╬ ╭ ╮ ╯ ▀ ▁ ▂ ▃ ▄ ▅ ▆ ▇ █ ▉ ▊ ▋ ▌ ▍ ▎ ▏▐ ░ ▒ ▓ ▔ ▖▗ ▘ ▙ ▚ ▛ ▜ ▝ ▞ ▟
    mov - && BP1[i]="house1 $OX $OY 2 6 $SC $SM $CS $CL $AS $AL" || { unset BP1[i]; return; }
    CM1=$SKY$DIM$GRN CM2=$SKY$blk
    #0123456
    #1▁▂▃▂▁ 
    #2│▘▝▝| 
    ####################  1   2   3   4   5   6  #0
    cut $SX  $OY    $CM1 '▁' '▂' '▃' '▂' '▁' ' ' #1
    cut $SX $[OY+1] $CM2 '│' '▘' '▝' '▝' '|' ' ' #2
}
sprite_house2 () {
    mov - && BP2[i]="house2 $OX $OY 9 30 $SC $SM $CS $CL $AS $AL" || { unset BP2[i]; return; }
    CM1="$SKY$BLU" CM2=$SKY$BLD$YLW CM3=$SKY$YLW CM4=$SKY$ylw CM5=$SKY$blk
    X1="_Y_$[OX+9]H" X2="_Y_$[OX+9]H" X3="_Y_$[OX+8]H" X4="_Y_$[OX+8]H"
    X5="_Y_$[OX+7]H" X6="_Y_$[OX+7]H" X7="_Y_$[OX+6]H" X8="_Y_$[OX+6]H"
    #0123456789ABCDEFJHIJKLMNOPQRSTU
    #1         ╂                    
    #2         ╧                    
    #3        ╱ ╲                   
    #4        |▐|                   
    #5       ┮┷━┷┭                  
    #6       │ █ |                  
    #7      ┮┷━━━┷┭                 
    #8      │ ▛▔▜ │▄▄▄▄▂▁           
    #9▂ ╬ ▃ ┃ ▌▒▐ ┃ ▘▗▘┿┃▗ ╂ ╪ ▄  ▖ 
    ####################  1   2   3   4   5   6     7     8     9     A   B   C   D       E       F       J       H       I       J   K   L   M   N   O   P   Q   R   S   T   U  #0
    cut $SX  $OY    $CM2 ''  ''  ''  ''  ''  ''    ''    ''    '' $X1'╂' ' '                                                                                                     #1
    cut $SX $[OY+1] $CM3 ''  ''  ''  ''  ''  ''    ''    ''    '' $X2'╧' ' '                                                                                                     #2
    cut $SX $[OY+2] $CM4 ''  ''  ''  ''  ''  ''    ''    '' $X3'╱'   ' ' '╲' ' '                                                                                                 #3
    cut $SX $[OY+3] $CM5 ''  ''  ''  ''  ''  ''    ''    '' $X4'|'   '▐' '|' ' '                                                                                                 #4
    cut $SX $[OY+4] $CM1 ''  ''  ''  ''  ''  ''    '' $X5'┮'   '┷'   '━' '┷' '┭' ' '                                                                                             #5
    cut $SX $[OY+5] $CM5 ''  ''  ''  ''  ''  ''    '' $X6'│'   ' '   '█' ' ' '│' ' '                                                                                             #6
    cut $SX $[OY+6] $CM1 ''  ''  ''  ''  ''  '' $X7'┮'   '┷'   '━'   '━' '━' '┷' '┭'     ' '                                                                                     #7
    cut $SX $[OY+7] $CM5 ''  ''  ''  ''  ''  '' $X8'│'   ' '   '▛'   '▔' '▜' ' ' '│' $CM1'▄' $CM1'▄' $CM1'▄' $CM1'▄' $CM1'▂' $CM1'▁' ' '                                         #8
    cut $SX $[OY+8] $CM5 '▂' ' ' '╬' ' ' '▃' ' '   '┃'   ' '   '▌'   '▒' '▐' ' ' '┃'     ' '     '▘'     '▗'     '▘'     '┿'     '┃' '▗' ' ' '╂' ' ' '╪' ' ' '▄' ' ' ' ' '▖' ' ' #9
}
sprite_house3 () {
    mov - && BP3[i]="house3 $OX $OY 4 17 $SC $SM $CS $CL $AS $AL" || { unset BP3[i]; return; }
    CM1=$SKY$DIM$MGN CM2=$SKY$blk CM3=$SKY$DIM$CYN X1="_Y_$[OX+5]H" X2="_Y_$[OX+2]H" X3="_Y_$[OX+2]H"
    #0123456789ABCDEFJHI
    #1     ▖            
    #2  ▂▄▆██▆▄▂        
    #3  ┃╒╕╒╕╒╕┃ ┮━┭    
    #4╠╬┃┵┘┵┶└┶┃╬╣▓╠╬╣▖ 
    ####################  1   2       3       4       5       6       7       8       9   A       B   C       D       E   F   J       H   I  #0
    cut $SX  $OY    $CM2 ''  ''      ''      ''      ''   $X1'▖'     ' '                                                                     #1
    cut $SX $[OY+1] $CM1 ''  ''   $X2'▂'     '▄'     '▆'     '█'     '█'     '▆'     '▄' '▂'     ' '                                         #2
    cut $SX $[OY+2] $CM2 ''  ''   $X3'┃'     '╒'     '╕'     '╒'     '╕'     '╒'     '╕' '┃'     ' ' '┮'     '━'     '┭' ' '                 #3
    cut $SX $[OY+3] $CM3 '╠' '╬' $CM2'┃' $CM2'┵' $CM2'┘' $CM2'┵' $CM2'┶' $CM2'└' $CM2'┶' '┃' $CM3'╬' '╣' $CM2'▓' $CM3'╠' '╬' '╣' $CM2'▖' ' ' #4
}
#------------------------{ BOOM }---------------------------------------------------------------------------------------
sprite_boom () {
    BX=$OX BY=$OY
    [[ $AS -ge $AL ]] && { unset BP3[i]; return; }
    case $AS in
          0) cut $[BX+3]  $BY    $YLW         '_'      #     _
             cut $[BX+2] $[BY+1] $YLW        '(_)';;   #    (_)
          1) cut $[BX+2]  $BY    $RED        '.-.'     #    .-.
             cut $[BX+1] $[BY+1] $RED       '(   )'    #   (   )
             cut $[BX+1] $[BY+2] $RED        '`-´';;   #    `-´
          2) cut $[BX+3] $[BY-1] $red         '_'      #     _
             cut $[BX+1]  $BY    $red       '-   +'    #   -   +
             cut  $BX    $[BY+1] $red      '(     )'   #  (     )
             cut $[BX+1] $[BY+2] $red       '+ _ -';;  #   + _ -
          3) cut $[BX+2] $[BY-1] $DIM$RED    '- -'     #    - -
             cut  $BX     $BY    $DIM$RED  '´     `'   #  ´     `
             cut $[BX-1] $[BY+1] $DIM$RED "'       '"  # '       '
             cut  $BX    $[BY+2] $DIM$RED  '`  _  ´';; #  `  _  ´
          4) cut $[BX+2] $[BY-1] $SKY        '   '     #  eraser
             cut  $BX     $BY    $SKY      '       '   #
             cut $[BX-1] $[BY+1] $SKY     '         '  #
             cut  $BX    $[BY+2] $SKY      '       ';; #
    esac
    mov -; BP3[i]="boom $BX $BY 0 0 $SC $SM $CS $CL $AS $AL"
}
#------------------------{ Sun }----------------------------------------------------------------------------------------
sprite_Sun () {
    mov -; BP1[i]="Sun $Sunsendx 1 9 18 $SC 7 $CS $CL $AS $AL"
    case $AS in
          0) cut $OX 1 $SKY$YLW     '       ___ |       '
             cut $OX 2 $SKY$BLD$YLW '---````    \       '
             cut $OX 3 $SKY$YLW     '           _`.     '
             cut $OX 4 $SKY$BLD$YLW '        ../   `..__'
             cut $OX 5 $SKY$YLW     '     ../        /  '
             cut $OX 6 $SKY$YLW     '    /          /   '
             cut $OX 7 $SKY$BLD$YLW '              /    '
             cut $OX 8 $SKY$YLW     '              /    '
             cut $OX 9 $SKY$BLD$YLW '             /     ';;
          1) cut $OX 1 $SKY$YLW     '_...---``  |       '
             cut $OX 2 $SKY$BLD$YLW '        _.-\       '
             cut $OX 3 $SKY$YLW     '   _.--`    `.     '
             cut $OX 4 $SKY$YLW     ' -`          ,`..__'
             cut $OX 5 $SKY$BLD$YLW '           ,`     |'
             cut $OX 6 $SKY$YLW     '         ,`       |'
             cut $OX 7 $SKY$YLW     '       _`        | '
             cut $OX 8 $SKY$BLD$YLW '                 | '
             cut $OX 9 $SKY$YLW     '                 | ';;
          2) cut $OX 1 $SKY$BLD$YLW '     _...--|       '
             cut $OX 2 $SKY$BLD$YLW '..--`      \       '
             cut $OX 3 $SKY$BLD$YLW '         .. `.     '
             cut $OX 4 $SKY$YLW     '     _.-`     `..__'
             cut $OX 5 $SKY$BLD$YLW '  ..`         .`   '
             cut $OX 6 $SKY$BLD$YLW '             /     '
             cut $OX 7 $SKY$YLW     '            /      '
             cut $OX 8 $SKY$BLD$YLW '          .`       '
             cut $OX 9 $SKY$YLW     '         `         ';;
    esac
}
#------------------------{ Intro }--------------------------------------------------------------------------------------
sprite_PIU () {
    [[ $OX -gt $C1 ]] && mov - || return 1
    INT[i]="PIU $OX $OY 9 41 $SC $SM $CS $CL $AS $AL $C1"
    C1=$DEF$BLU C2=$RED C3=$YLW C4=$red C5=$BLD$BLU X1="_Y_$[OX+1]H" X2="_Y_$[OX+2]H" X3="_Y_$[OX+3]H" X4="_Y_$[OX+6]H$C2"
    XC=$X3$C2
    #0123456789ABCDEFJHIJKLMNOPQRSTUVWXYZ.....
    #1   ░   ░░░ ░░     ░  ░░      ░░  ░░ ░   
    #2 ░   ░  ▒██████ ░▒██████ ▒██░  ▒██      
    #3   ░ ░░▒▓██ ▒▓██ ▓▓▓██▓ ▒▓██ ░▒▓██░░ ░  
    #4░ ░ ░░▒▓██ ▒▓██ ▒▒▒▓██ ░▒▓██░ ▒▓██░     
    #5      ▒▓██████░ ░▒▓██ ░▒▓██ ░▒▓██░░ ░ ░ 
    #6  ░  ▒▓██▓▓▓▓  ░ ▒▓██░ ▒▓██░░▒▓██ ░     
    #7   ▒▓████▒▒▒░ ░ ▓██████ ▒▓██████░░ ░    
    #8░ ░▒▓▓▓▓ ░ ░░▒▓▓▓▓▓▓ ░ ▒▓▓▓▓▓░          
    #9 ░ ▒▒ ░ ░ ░ ░▒▒▒▒▒▒ ░ ░░▒▒▒▒░  ░        
    ###################  1    2    3    4    5    6    7    8    9    A B    C    D    E    F    J    H    I    J    K    L    M    N    O     P   Q    R    S    T    U    V    W    X    Y    Z . . . . . #0
    cut $SX  $OY    $C1 ''   ''   '' $X3░    ⎕    ⎕    ⎕    ░    ░    ░ ⎕    ░    ░    ⎕    ⎕    ⎕    ⎕    ⎕    ░    ⎕    ⎕    ░    ░    ⎕    ⎕    ⎕    ⎕    ⎕    ⎕    ░    ░    ⎕    ⎕    ░    ░ ⎕ ░ ⎕     #1
    cut $SX $[OY+1] $C1 '' $X1░    ⎕    ⎕    ⎕    ░    ⎕    ⎕ $C2▒ $C3█ █    █    █    █    █    ⎕ $C1░ $C2▒ $C3█    █    █    █    █    █    ⎕ $C2▒ $C3█    █ $C1░    ⎕    ⎕ $C2▒ $C3█    █    ⎕           #2
    cut $SX $[OY+2] $C1 ''   ''   '' $X3░    ⎕    ░    ░ $C2▒ $C4▓ $C3█ █    ⎕ $C2▒ $C4▓ $C3█    █    ⎕ $C4▓    ▓    ▓ $C3█    █ $C4▓    ⎕ $C2▒ $C4▓ $C3█    █    ⎕ $C1░ $C2▒ $C4▓ $C3█    █ $C1░ ░ ⎕ ░ ⎕   #3
    cut $SX $[OY+3] $C1  ░    ⎕    ░    ⎕    ░    ░ $C2▒ $C4▓ $C3█ $C3█ ⎕ $C2▒ $C4▓ $C3█    █    ⎕ $C2▒    ▒    ▒ $C4▓ $C3█    █    ⎕ $C1░ $C2▒ $C4▓ $C3█    █ $C1░    ⎕ $C2▒ $C4▓ $C3█    █ $C1░ ⎕         #4
    cut $SX $[OY+4] $C5 ''   ''   ''   ''   ''   '' $X4▒ $C4▓ $C3█    █ █    █    █    █ $C5░    ⎕    ░ $C2▒ $C4▓ $C3█    █    ⎕ $C5░ $C2▒ $C4▓ $C3█    █    ⎕ $C5░ $C2▒ $C4▓ $C3█    █ $C5░    ░ ⎕ ░ ⎕ ░ ⎕ #5
    cut $SX $[OY+5] $C1 ''   '' $X2░    ⎕    ⎕ $C2▒ $C4▓ $C3█    █ $C4▓ ▓    ▓    ▓    ⎕    ⎕ $C1░    ⎕ $C2▒ $C4▓ $C3█    █ $C1░    ⎕ $C2▒ $C4▓ $C3█    █ $C1░    ░ $C2▒ $C4▓ $C3█    █    ⎕ $C1░ ⎕         #6
    cut $SX $[OY+6] $C1 ''   ''   '' $XC▒ $C4▓ $C3█    █    █    █ $C2▒ ▒    ▒ $C1░    ⎕    ░    ⎕ $C4▓ $C3█    █    █    █    █    █    ⎕ $C2▒ $C4▓ $C3█    █    █    █    █    █ $C1░    ░    ⎕ ░ ⎕       #7
    cut $SX $[OY+7] $C1  ░    ⎕    ░ $C2▒ $C4▓    ▓    ▓    ▓    ⎕ $C1░ ⎕    ░    ░ $C2▒ $C4▓    ▓    ▓    ▓    ▓    ▓    ⎕ $C1░    ⎕ $C2▒ $C4▓    ▓    ▓    ▓    ▓ $C1░    ⎕                               #8
    cut $SX $[OY+8] $C1 '' $X1░    ⎕    ▒    ▒    ⎕    ░    ⎕    ░    ⎕ ░    ⎕    ░    ▒    ▒    ▒    ▒    ▒    ▒    ⎕    ░    ⎕    ░    ░    ▒    ▒    ▒    ▒    ░    ⎕    ⎕    ░    ⎕                     #9
    #cut $SX $[OY+15] $C1 $GRN UNOFFICIAL' 'MOD' 'BY' 'USIQWERTY #my
}
sprite_ARR () {
    [[ $OX -lt $C1 ]] && mov + || return 1
    INT[i]="ARR $OX $OY 6 28 $SC $SM $CS $CL $AS $AL $C1"
    C1=$DEF$blu C2=$DEF$DIM$mgn C3=$DEF$BLD$GRN C4=$DEF$DIM$red C5=$DEF$BLD$RED C6=$DEF$BLD$YLW
    X1="_Y_$[OX+1]H" X2="_Y_$[OX+4]H" X3="_Y_$[OX+5]H" X4="_Y_$[OX+10]H"
    #0123456789ABCDEFJHIJKLMNOPQRS
    #1           ░░ ▒▓███░        
    #2      ░░░ ▒████ ▒▓███░      
    #3  ░ ▒████▒▓▓▓▓ ░░▒▓▓███ ░░ ░
    #4 ░ ▒▓▓▓▓ ▒████░▒▓███░░      
    #5  ▒ ▒▒  ▒▓▓▓▓▒▓███░         
    #6     ░░░ ▒▒▒ ░░▒▒░          
    ###################  1    2 3    4    5    6    7    8    9    A    B    C    D    E    F    J    H    I    J    K    L    M    N O    P Q R S #0
    cut $SX  $OY    $C1 ''   '' ''  ''   ''   ''   ''   ''   ''   '' $X4⎕    ░    ░    ⎕ $C6▒    ▓ $C3█ $C3█ $C3█ $C1░                             #1
    cut $SX $[OY+1] $C1 ''   '' ''  ''   '' $X3⎕    ░    ░    ░    ⎕ $C2▒ $C5█ $C5█ $C5█ $C5█    ⎕ $C6▒ $C6▓ $C3█ $C3█ $C3█ $C1░                   #2
    cut $SX $[OY+2] $C1 '' $X1⎕ ░    ⎕ $C4▒ $C5█ $C5█ $C5█ $C5█ $C4▒ $C2▓ $C2▓ $C2▓ $C2▓    ⎕ $C1░ $C1░ $C6▒ $C6▓ $C6▓ $C3█ $C3█ $C3█ ⎕ $C1░ ░ ⎕ ░ #3
    cut $SX $[OY+3] $C1  ⎕    ░ ⎕ $C2▒ $C2▓ $C2▓ $C2▓ $C2▓    ⎕ $C4▒ $C5█ $C5█ $C5█ $C5█ $C1░ $C6▒ $C6▓ $C3█ $C3█ $C3█ $C1░    ░                   #4
    cut $SX $[OY+4] $C1 '' $X1⎕ ▒    ⎕    ▒    ▒    ⎕    ⎕ $C2▒ $C2▓ $C2▓ $C2▓ $C2▓ $C6▒ $C6▓ $C3█ $C3█ $C3█ $C1░                                  #5
    cut $SX $[OY+5] $C1 ''   '' ''  '' $X2⎕    ░    ░    ░    ⎕    ▒    ▒    ▒    ⎕    ░    ░    ▒    ▒    ░                                       #6
    cut $SX $[OY+5] $GRN ' 'UNOFFICIAL' ' MOD' 'BY' ' $RED USIQWERTY  #my
}

#================================================{ Functions }==========================================================
get_dimensions () {
    size=($(stty size))
    endx=${size[1]}
    endy=${size[0]}
    halfendx=$[endx/2 ]
    halfendy=$[endy/2 ]
    boomendx=$[endx-10]
    boomendy=$[endy-4 ]
    bullendx=$[endx-4 ]
    heroendx=$[endx-15]
    heroendy=$[endy-8 ]
    enmyendy=$[endy-9 ]
    bossendx=$[endx-14]
    bossendy=$[endy-7 ]
    bosshbar=$[endx-10]
    lineendy=$[endy-2 ]
    Sunsendx=$[endx-18]
    hos1endy=$[endy-4 ]
    hos2endy=$[endy-11]
    hos3endy=$[endy-6 ]
    msgrendy=$[endy-10]
    tre1endy=$[endy-tree1H-2]
    tre2endy=$[endy-tree2H-2]
    tre3endy=$[endy-tree3H-2]
}

bye () { cursor on; exit $1; }

cursor () {
    case $1 in
         on) stty  echo; printf "$CON";;
        off) stty -echo; printf "$COF";;
    esac
}

mov () {
    case $1  in -) cuter=++;; +) cuter=--;; esac
    case $SC in
        0) [[ $OX -le -$OW   ]] && return 1
           [[ $OX -gt  $endx ]] && return 1
           [[ $AS -ge  $AL   ]] && AS=0  || ((AS++)) # sprites animation
           [[ $OX -le  1     ]] && ((CS++))
           ((OX$1$1)); ((CL$cuter)); SC=$SM
           [[ $CL -lt 0 ]] && CL=0;;
        *) ((SC--));;
    esac
    [[ $OX -le 1 ]] && SX=0 || SX=$OX
}

cut () {
    xcord=$1 ycord=$2 color=$3; shift 3
    screen+="\e[$ycord;${xcord}H$color"
    printf -v spr %s "${@:$CS:$CL}"
    spr="${spr//_Y_/'\e['$ycord;}"
    screen+="${spr//⎕/ }"
}

movy () { # used in bonus crate
    case $SC in
        0) [[ $OY -ge $[endy-2] ]]    && return 1
           [[ $AS -ge $AL  ]] && AS=0 || ((AS++))
           [[ $CS -le $OH  ]] && ((CS++))
           ((OY++)); SC=$SM;;
        *) ((SC--));;
    esac
}

cuty () { # used in bonus crate
    xcord=$1 ycord=$2 cuter=$3; shift 3
    [[ $CS -ge $cuter ]] && screen+="\e[$[ycord-cuter];${xcord}H$@"
}

bonus () { # get random bonus from alien or not
    case $[RANDOM % $rnd] in
        0) ENM+=("${bonuses[$[RANDOM%${#bonuses[@]}]]} $OX $[OY-1] 3 5 0 2 1 0 0 0 ${#ENM[@]}")
    esac
}

mess () {
    cursor off
    XY 1 1 ${DEF}; clear
    case $1 in
        "win" ) sprite_win ; XY 0 ${endy}; read -t3 -n1000 trash; bye 0;;
        "lose") sprite_lose; XY 0 ${endy}; read -t3 -n1000 trash; bye 1;;
        "help") sprite_help;;
    esac
}

print_sprite () {
    OT=${OI[0]}   # object type
    OX=${OI[1]}   # X coordinate
    OY=${OI[2]}   # Y coordinate
    OH=${OI[3]}   # object hight
    OW=${OI[4]}   # object width
    SC=${OI[5]}   # speed counter
    SM=${OI[6]}   # speed max
    CS=${OI[7]}   # cuting start
    CL=${OI[8]}   # cuting lenght
    AS=${OI[9]}   # animation start
    AL=${OI[10]}  # animation lenght
    C1=${OI[11]}  # custom obj parameter 1
    C2=${OI[12]}  # custom obj parameter 2
    [[ $OT ]] && sprite_$OT
}

listener   () { input2=$(nc -l -p $sport); }
read_input () { read -t$spd -srn1 input &> /dev/null; }
sender     () { until nc -q0 $1 $2 2> /dev/null <<< "$3"; do :; done; }

control_hero1 () {
    read_input
    case $input in
        [wW]) [[ $H1Y  -gt 2               ]] && ((H1Y--));;
        [aA]) [[ $H1X  -gt 1               ]] && ((H1X--));;
        [sS]) [[ $H1Y  -lt $heroendy       ]] && ((H1Y++));;
        [dD]) [[ $H1X  -lt $heroendx       ]] && ((H1X++));;
        [pP]) [[ $ammo -ge $G && $C1 -eq 0 ]] && { C1=7; add_piu $1 $2 1 $G; ((ammo-=$G)); };;
    esac
}

control_hero2 () {
    case $input2 in
        [wW]) [[ $H2Y   -gt 2                ]] && ((H2Y--));;
        [aA]) [[ $H2X   -gt 1                ]] && ((H2X--));;
        [sS]) [[ $H2Y   -lt $heroendy        ]] && ((H2Y++));;
        [dD]) [[ $H2X   -lt $heroendx        ]] && ((H2X++));;
        [pP]) [[ $ammo2 -ge $G2 && $C1 -eq 0 ]] && { C1=7; add_piu $1 $2 2 $G2; ((ammo2-=$G2)); };;
    esac
}

rndmbonus () {
    case $1:$[RANDOM%3] in
          1:0) ((life++)) ;;
          2:0) ((life2++));;
          1:1) ((ammo+=100)) ;;
          2:1) ((ammo2+=100));;
          1:2) [[ $G  -lt 5 ]] && ((G++)) ;;
          2:2) [[ $G2 -lt 5 ]] && ((G2++));;
    esac
}
collbooom () { unset ENM[obj_i]; boom $obj_x $obj_y; }
collision () {
    hero=$1 re="$2"
    case $type in
        'duel') target=("${HER[@]}" "${ENM[@]}");;
             *) target=("${ENM[@]}");;
    esac
    [[ ${target[@]} =~ $re ]] && {
        match=($BASH_REMATCH)
        obj_i=${match[@]:11:1}
        obj_x=${match[@]:1:1}
        obj_y=${match[@]:2:1}
        case $match:$hero in
              bfire:*) collbooom; return 0;;
               boss:*) ((bhealth--)); boom $3 $4; return 0;;
               life:1) collbooom; ((life++))    ; return 1;;
               life:2) collbooom; ((life2++))   ; return 1;;
               ammo:1) collbooom; ((ammo+=100)) ; return 1;;
               ammo:2) collbooom; ((ammo2+=100)); return 1;;
#              alien:*) collbooom; ((enumber--)) ; return 0;;
              gunup:1) collbooom; [[ $G  -lt 5 ]] && ((G++))  ; return 1;;
              gunup:2) collbooom; [[ $G2 -lt 5 ]] && ((G2++)) ; return 1;;
              alien:1) collbooom; ((enumber--)) ; ((frags++)) ; bonus; return 0;;
              alien:2) collbooom; ((enumber--)) ; ((frags2++)); bonus; return 0;;
              hero1:2) ((frags2++)); ((life--)) ; BOOM $obj_x $obj_y ; return 0;;
              hero2:1) ((frags++)) ; ((life2--)); BOOM $obj_x $obj_y ; return 0;;
              crate:*) collbooom; crate=0; boom $obj_x $[obj_y-3]; boom $obj_x $[obj_y-6]; rndmbonus $hero; return 1;;
        esac
    }
}

boom () {
    XB=$1 YB=$2
    [[ $XB -lt     2     ]] && XB=2
    [[ $XB -gt $boomendx ]] && XB=$boomendx
    BP3+=("boom $XB $YB 0 0 0 $[RANDOM%3] 1 9 0 5")
}

BOOM () {  XB=$1   YB=$2
    boom  $XB    $[YB+1]
    boom $[XB+4]  $YB
    boom $[XB+1] $[YB+1]
    boom $[XB+3]  $YB
    boom  $XB    $[YB+1]
}

fps_counter () { #-{ Print FPS }-----------------------------------------------
    [[ $SECONDS -gt $sec ]] && {
        FPS=$FPSC AVG+=($FPS)
        [[ $FPSL ]] || FPSL=$FPS
        [[ $FPS -gt $FPSM  ]] && FPSM=$FPS
        [[ $FPS -lt $FPSL  ]] && FPSL=$FPS
        (( ${#AVG[@]} == 5 )) && { avg="${AVG[@]}"; FPSA=$(( (${avg// /+})/5 )); AVG=(); }
        sec=$SECONDS
        FPSC=0
    } || ((FPSC++))
    case $game in
        'server') screen+="\e[$endy;$[endx-9]H${DEF}FPS: $RED$FPS ";;
               *) screen+="\e[$endy;2H${DEF}FPS: $RED$FPS ${DEF}max: $RED$FPSM ${DEF}low: $RED$FPSL ${DEF}avg: $RED$FPSA ";;
    esac
}

status () { #-{ Print game status }--------------------------------------------
    case $type:$virus in
         (duel:*       ) enemy=rival   bullets=Ammo;;
         (   *:covid-19) enemy=viruses bullets=Meds;;
         (team:*       ) enemy=aliens  bullets=Ammo;;
    esac
    screen+="\e[1;2H$SKY${BLK}Killed $enemy: $SKY$RED$frags$SKY ${BLK}Life: $SKY$RED$life$SKY ${BLK}$bullets: $SKY$RED$ammo$SKY "
    case $game in 'server')
        screen+="\e[$endy;2H$LND${BLK}Killed $enemy: $LND$RED$frags2$LND ${BLK}Life: $LND$RED$life2$LND ${BLK}$bullets: $LND$RED$ammo2$LND ";;
    esac
}

boss_health () {
    bar=; hp=$[bosshbar * bhealth / 100]; hm=$[endx - 10]
    for (( i=0  ; i<hp; i++ )); do bar="█$bar"; done
    for (( i=$hp; i<hm; i++ )); do bar="$bar "; done
    screen+="\e[$[endy-1];1H$LND $BLD${RED}BOSS: $LND$BLK|$BLD$RED$bar$LND$BLK|$LND"
}

fill_screen () {
    for ((i=0;        i<lineendy; i++)); do printf "$SKY%${endx}s"; done
    for ((i=lineendy; i<endy;     i++)); do printf "$LND%${endx}s"; done
}

drop_crate () { # in duel mode ad plane'll drop bonus crate
    case $type:$crate in duel:0)
        [[ $OX -eq $halfendx ]] && { crate=1 ENM+=("crate $[halfendx-1] 6 7 7 0 $[RANDOM%5+5] 0 0 0 0 ${#ENM[@]}"); };;
    esac
}

add_enm () {
    [[ $BR -gt 0 ]] && ((BR--))
    [[ $enumber -lt $enmax && $BR -eq 0 ]] || return
    ENM+=("alien $1 $2 3 5 0 $[RANDOM%2] 1 ${3:-0} $[RANDOM%3] 3 ${#ENM[@]}")
    ((enumber++))
    BR=20
}

add_piu () {
    PX=$1 PY=$2 PH=$3 PS=$4
    case $PS in
        1) PIU+=("piu$PH $[PX+12] $[PY+3] 1 4 0 0 1 $[endx-(PX+12)] $[RANDOM%3] 3");; # -=>

        2) PIU+=("piu$PH $[PX+12] $[PY+4] 1 4 0 0 1 $[endx-(PX+12)] $[RANDOM%3] 3"    # -=>
                                                                                      #
                 "piu$PH $[PX+12] $[PY+2] 1 4 0 0 1 $[endx-(PX+12)] $[RANDOM%3] 3");; # -=>

        3) PIU+=("piu$PH $[PX+12] $[PY+2] 1 4 0 0 1 $[endx-(PX+12)] $[RANDOM%3] 3"    # -=>
                 "piu$PH $[PX+13] $[PY+3] 1 4 0 0 1 $[endx-(PX+13)] $[RANDOM%3] 3"    #  -=>
                 "piu$PH $[PX+12] $[PY+4] 1 4 0 0 1 $[endx-(PX+12)] $[RANDOM%3] 3");; # -=>

        4) PIU+=("piu$PH $[PX+12] $[PY+1] 1 4 0 0 1 $[endx-(PX+12)] $[RANDOM%3] 3"    # -=>
                 "piu$PH $[PX+13] $[PY+2] 1 4 0 0 1 $[endx-(PX+13)] $[RANDOM%3] 3"    #  -=>
                                                                                      #
                 "piu$PH $[PX+13] $[PY+4] 1 4 0 0 1 $[endx-(PX+13)] $[RANDOM%3] 3"    #  -=>
                 "piu$PH $[PX+12] $[PY+5] 1 4 0 0 1 $[endx-(PX+12)] $[RANDOM%3] 3");; # -=>

        5) PIU+=("piu$PH $[PX+12] $[PY+1] 1 4 0 0 1 $[endx-(PX+12)] $[RANDOM%3] 3"    # -=>
                 "piu$PH $[PX+13] $[PY+2] 1 4 0 0 1 $[endx-(PX+13)] $[RANDOM%3] 3"    #  -=>
                 "piu$PH $[PX+14] $[PY+3] 1 4 0 0 1 $[endx-(PX+14)] $[RANDOM%3] 3"    #   -=>
                 "piu$PH $[PX+13] $[PY+4] 1 4 0 0 1 $[endx-(PX+13)] $[RANDOM%3] 3"    #  -=>
                 "piu$PH $[PX+12] $[PY+5] 1 4 0 0 1 $[endx-(PX+12)] $[RANDOM%3] 3");; # -=>
    esac
}

add_backgound () {
    rndy=$[2+RANDOM%10]; [[ $rndy -gt $[3+enmyendy] ]] && rndy=$[3+enmyendy]
    #-{ Add birds }------------------------------------------------------------
    case $[RANDOM % $BRD] in 0) BP1+=("bird  $endx $rndy 2 2  0 $[3+RANDOM%3] 1 0 $[RANDOM%2] 2");; esac

    #-{ Add msngr }------------------------------------------------------------
    case $type in duel) msngrY=2;; *) msngrY=$rndy;; esac
    case $[RANDOM % $MSN] in 0) BP2+=("msngr $endx $msngrY 4 20 0 $[1+RANDOM%4] 1 0 $[RANDOM%3] 3");; esac

    #-{ Add clouds }-----------------------------------------------------------
    case $[RANDOM % $CLD]:$[RANDOM % 3 + 1] in
        0:1) BP1+=("cloud1 $endx $rndy 3 6  6 $[6+RANDOM%2] 1 0 0 0");;
        0:2) BP2+=("cloud2 $endx $rndy 3 8  4 $[4+RANDOM%2] 1 0 0 0");;
        0:3) BP3+=("cloud3 $endx $rndy 3 11 2 $[2+RANDOM%2] 1 0 0 0");;
    esac

    #-{ Add house }------------------------------------------------------------
    case $[RANDOM % $HOU]:$[RANDOM % 3 + 1] in
        0:1) BP1+=("house1 $endx $hos1endy 2 6  6 $[6+RANDOM%2] 1 0 0 0");;
        0:2) BP2+=("house2 $endx $hos2endy 9 30 4 $[4+RANDOM%2] 1 0 0 0");;
        0:3) BP3+=("house3 $endx $hos3endy 4 17 2 $[2+RANDOM%2] 1 0 0 0");;
    esac

    #-{ Add trees }------------------------------------------------------------
    case $[RANDOM % $TRE]:$[RANDOM % 3 + 1] in
        0:1) BP1+=("tree1 $endx $tre1endy 3 2 6 $[6+RANDOM%2] 1 0 0 0");;
        0:2) BP2+=("tree2 $endx $tre2endy 6 5 4 $[4+RANDOM%2] 1 0 0 0");;
        0:3) BP3+=("tree3 $endx $tre3endy 9 9 2 $[2+RANDOM%2] 1 0 0 0");;
    esac

    #-{ Print moving land }----------------------------------------------------
    screen+="\e[$lineendy;1H$LND${land:$[1-${LX:-1}]:$endx}"; [[ ${LX:-1} -lt -$[$LN/2] ]] && LX=-1 || ((LX--))
}

#------------------------{ Intro }--------------------------------------------------------------------------------------
intro () {
    i=0  #    start X                           target X
    INT=("PIU $endx 30 90 41 0 0 1 0          0 0 $[endx/2-1]"
         "PIU $endx 17 9 41 0 0 1 0          0 0 $[endx/2-40]"
         "ARR 1    24 6 28 0 0 0 $[endx-29] 0 0 $[endx/2-16]")
    while true; do
        sleep $spd; screen=
        OI=(${INT[i]})
        print_sprite || ((i++))
        printf "$screen"
        [[ $i -gt ${#INT[@]} ]] && break
    done
    XY $[endx/2+30] 11 "$version"
}

HCI=0 SCI=1 HSI=0 H1C=${H1C:-$DHC} H1S=${H1S:-$DHS} S1C=${S1C:-$DSC}
hero_sign=(★ ☭ ✚ ✙ ✠ ✡ ✦ ✧ ✩ ✪ ☘ ☠ ☢ ☣ ☯ ❃ ❂ ❁ ✿ ❀ ✣ ♣ ♠ ♥ ♦ ❤ ● ☻ ♀ ♂)
hero_color=($BLK $RED $GRN $YLW $BLU $MGN $CYN $WHT)
sign_color=($BLK $RED $GRN $YLW $BLU $MGN $CYN $WHT)
hero_config () {
    screen=
    [[ $AS -gt 0 ]] && ((AS--)) || AS=3
    CM1=$SKY$H1C$BLD CM2=$SKY$DIM$H1C CM3=$SKY$H1C CM4=$SKY$BLD$H1C$UND TR=${tailrotor[AS]} OX=$[$endx/2-9] OY=$[$endy/2-6] CS=1 CL=20
    # Using the same 'cut' function to print hero as in the game to preserve this nicely done tabled structure
    ######X####Y#####CLR  1   2   3       4        5       6       7       8        9       A        B       C       D       E   F   G  #0
    cut $OX  $OY    $SKY ' ' ' ' ' '     ' '      ' '     ' '     ' '     ' '      ' '     ' '      ' '     ' '     ' '     ' ' ' ' ' ' #1
    cut $OX $[OY+1] $CM1 ' ' '_' '_'     ' '                                         ${mainrotor[AS]}                               ' ' #2
    cut $OX $[OY+2] $CM2 ' ' '|' $TR $CM1'\\' $CM1'_' $CM1'_' $CM1'_' $CM3'.'  $CM3'-' $CM3'╨'  $CM4'─' $CM4'｡' $CM1'_' $SKY' ' ' ' ' ' #3
    cut $OX $[OY+3] $CM2 ' ' '`' '─'     '´'      '‾'     '‾'     '‷'     '\\' $blk'°' $S1C$H1S $SKY' ' $blk'º' $blk'¯' $CM1']' '─' ' ' #4
    cut $OX $[OY+4] $CM2 ' ' ' ' ' '     ' '      ' '     ' '     ' '     ' '      '‾'     '‾'      '‾'     '‾'     '‾' $SKY' ' ' ' ' ' #5
    cut $OX $[OY+5] $SKY ' ' ' ' ' '     ' '      ' '     ' '     ' '     ' '      ' '     ' '      ' '     ' '     ' '     ' ' ' ' ' ' #6
    printf "$screen"

    for i in ${!hero_sign[@]}; {
        [[ $i -eq $HSI ]] && selected=$DEF$BLD$RED || selected=$DEF
        [[ $i -lt $[${#hero_sign[@]}/2] ]] \
            && XY $[MX+12+i*2] $MY     "$selected${hero_sign[i]}$DEF" \
            || XY $[MX+12+i*2-${#hero_sign[@]}] $[MY+1] "$selected${hero_sign[i]}$DEF"
    }
    for i in ${!sign_color[@]}; {
        [[ $i -eq $SCI ]] && selected=$BLD || selected=$DEF
        XY $[MX+12+i*2] $[MY+2] "$selected${sign_color[i]}●$DEF"
    }
    for i in ${!hero_color[@]}; {
        [[ $i -eq $HCI ]] && selected=$BLD || selected=$DEF
        XY $[MX+12+i*2] $[MY+3] "$selected${hero_color[i]}●$DEF"
    }
}

submenu () {
    case "${items[item]}$1" in
        'Hero  sign+') [[ $HSI -lt $[${#hero_sign[@]}-1] ]] && ((HSI++));;
        'Hero  sign-') [[ $HSI -gt 0 ]] && ((HSI--));;
        'Sign color+') [[ $SCI -lt $[${#sign_color[@]}-1] ]] && ((SCI++));;
        'Sign color-') [[ $SCI -gt 0 ]] && ((SCI--));;
        'Hero color+') [[ $HCI -lt $[${#hero_color[@]}-1] ]] && ((HCI++));;
        'Hero color-') [[ $HCI -gt 0 ]] && ((HCI--));;
    esac
    H1C=${hero_color[HCI]} H1S=${hero_sign[HSI]} S1C=${sign_color[SCI]}
}

item=1
selector () {
    read -t$spd -srn1 input &> /dev/null
    case $input in
        [wW]) [[ $item -gt 1 ]] && ((item--));;
        [aA]) submenu -;;
        [sS]) [[ $item -lt $[${#items[@]}-1] ]] && ((item++));;
        [dD]) submenu +;;
        [pP]) return $item;;
    esac;     return 0
}

printf -v eraser %40s
clr    () { for i in ${!items[@]}; { XY $MX $[MY+i] "$eraser"; }; }
Hero   () { :; }
Sign   () { :; }
back   () { clr; menu; }
start  () { return  1; }
team   () { type=duel; multiplayer; }
duel   () { type=team; multiplayer; }
server () { game=server; clr; menu; }
single () { game=single; clr; menu; }
cancel () { apply; H1C=$DHC; H1S=$DHS; S1C=$DSC; }
client () { clr; game=client; enter_server; clr; menu; }
apply  () { printf "$DEF"; clear; intro; show_hero=; item=1; items=('' "start $game" 'multiplayer' 'configure' 'exit'); }
configure    () { clear; show_hero=1; items=('' 'Hero  sign' 'Sign color' 'Hero color' 'apply' 'cancel'); }
multiplayer  () { clr; items=('' 'server' 'client' 'single' "$type" 'back'); }
enter_server () {
    XY $[$endx/2-10] $[$endy-4] "${RED}Enter server IP: "
    XY $[$endx/2-10] $[$endy-3] "$BLD$WHT"
    cursor on; read -p ' ' -e saddr; cursor off
}

game=single
type=team
menu () {
     item=1 MX=$[$endx/4+40] MY=$[$endy-6]
    items=('' "start $game" 'multiplayer' 'configure' 'exit')
    while true; do
        selector || ${items[$?]// */} || break
        [[ $show_hero ]] && hero_config
        for i in ${!items[@]}; {
            [[ $i -eq $item ]] && selected=$BLD$RED || selected=$DEF
            XY $MX $[MY+i] "$selected${items[i]}$DEF"
        }
    done
}
#======================================{ Main game loop single or server mode }=========================================
game () {
    while true; do
        #-{ Empty screen, print game status adnd FPS }-------------------------
        screen=; status; [[ $showfps ]] && fps_counter
        #-{ Add background }---------------------------------------------------
        [[ $background ]] && add_backgound
        #-{ Move bitplans }----------------------------------------------------
        BP1=("${BP1[@]}"); for i in ${!BP1[@]}; { OI=(${BP1[i]}); print_sprite; } # small(far) background objects
        BP2=("${BP2[@]}"); for i in ${!BP2[@]}; { OI=(${BP2[i]}); print_sprite; } # medium background objects
        PIU=("${PIU[@]}"); for i in ${!PIU[@]}; { OI=(${PIU[i]}); print_sprite; } # heroes fire
        HER=("${HER[@]}"); for i in ${!HER[@]}; { OI=(${HER[i]}); print_sprite; } # heroes
        ENM=("${ENM[@]}"); for i in ${!ENM[@]}; { OI=(${ENM[i]}); print_sprite; } # enemies
        BP3=("${BP3[@]}"); for i in ${!BP3[@]}; { OI=(${BP3[i]}); print_sprite; } # big(closer) background objects
        #-{ BOSS }-------------------------------------------------------------
        if [[ $[frags+frags2] -ge $tillboss ]]; then # add boss object
            [[ $bossborn ]] || { ENM+=("boss $endx $halfendy 6 14 0 0 1 0 $[RANDOM%3] 3 20 10"); bossborn=true; }
            boss_health # Print boss' health bar
            #-{ Add aliens }---------------------------------------------------
            [[ $bhealth -gt 0 ]] && add_enm $EX $EY 5 # aliens come out from boss
        else                                          #
            add_enm $endx $[4+RANDOM%enmyendy]        # aliens come out from edge
        fi
        #-{ Print everything }-------------------------------------------------
        printf "$screen"
        #-{ Check the end and send data to client }----------------------------
        case $game$type in
              *team) [[ ${HER[@]} ]] || the_end=lose;;&
              *duel) [[ ${HER[1]} ]] || if [[ $life -gt 0 ]]; then listener; sender $caddr $cport lose; mess win
                                                              else listener; sender $caddr $cport win ; mess lose; fi;;&
            server*) listener; sender $caddr $cport "$screen";;
        esac
        if [[ $the_end ]]; then
            case $game in 'server') listener; sender $caddr $cport $the_end;; esac
            mess $the_end
        fi
    done
}
#========================================{ Main game loop client mode }=================================================
game_client () {
    while true; do
        read_input
        sender $saddr $sport $input
        screen="$(nc -l -p $cport)"
        case $screen in
            'win' | 'lose') mess   "$screen";;
            *             ) printf "$screen";;
        esac
    done
}
#============================================{ Initialisation }=========================================================
trap : ALRM; trap bye INT TERM SIGINT SIGTERM EXIT; get_dimensions
clear; mess "help"; sleep 2
clear; intro; menu
clear; fill_screen
cursor off
#-{ Add hero1 and the Sun }--------------------------------
BP1=("Sun $Sunsendx 1 9 18 0 7 1 20 0 2")
H1X=1 H1Y=2 HER=("hero1 $H1X $H1Y 6 16 0 0 1 15 0 3 15 10")
#-------------------{ Generate grass }----------------------------------------------------------------------------------
for ((i=0; i<$endx; i++)); do land+=${grass[$[RANDOM % ${#grass[*]}]]}; done; land+=$land; LN=${#land}
#-{ If server }---------------------------------------------------------------------------------------------------------
case $game:$type in
    server:team) H2X=1         H2Y=$[halfendy-2];;&
    server:duel) H2X=$heroendx H2Y=$[halfendy-2] H1Y=$[halfendy-2] enmax=0; ad_plane_text;;&
    server:*   ) XY 2 1 $SKY$RED"Server mode. Waiting for client..."
                 HER+=("hero2 $H2X $H2Y 6 16 0 0 1 15 0 3 15 10")
                 clnt=( $(nc -l -p $sport) )
                 caddr=${clnt[0]}
                 cport=${clnt[1]}
                 H2C=${clnt[2]:-$DHC}
                 H2S=${clnt[3]:-$DHS}
                 S2C=${clnt[4]:-$DSC};;
#-{ If client }---------------------------------------------------------------------------------------------------------
    client:*   ) XY 2 1 $SKY$RED"Client mode. Waiting for server..."
                 sender $saddr $sport "${caddr[0]} $cport $H1C $H1S $S1C"
                 game_client;;
esac
game
